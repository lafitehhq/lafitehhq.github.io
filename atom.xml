<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>海球的博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-09-07T15:34:28.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用Python进行数据分析</title>
    <link href="http://yoursite.com/2017/09/15/%E5%88%A9%E7%94%A8Python%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2017/09/15/利用Python进行数据分析/</id>
    <published>2017-09-15T15:21:18.000Z</published>
    <updated>2017-09-07T15:34:28.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ovot91g2e.bkt.clouddn.com/%E5%88%A9%E7%94%A8Python%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90.png" alt=""><br>《利用Python进行数据分析》 读后感&amp;笔记<br><a id="more"></a></p>
<h1 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h1><p><img src="http://ovot91g2e.bkt.clouddn.com/%E5%88%A9%E7%94%A8python%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%9001.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ovot91g2e.bkt.clouddn.com/%E5%88%A9%E7%94%A8Python%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;《利用Python进行数据分析》 读后感&amp;amp;笔记&lt;br&gt;
    
    </summary>
    
      <category term="工作" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="互联网技能" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/%E4%BA%92%E8%81%94%E7%BD%91%E6%8A%80%E8%83%BD/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python网络数据采集</title>
    <link href="http://yoursite.com/2017/09/04/python%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/"/>
    <id>http://yoursite.com/2017/09/04/python网络数据采集/</id>
    <published>2017-09-04T06:58:27.000Z</published>
    <updated>2017-09-07T15:43:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ovot91g2e.bkt.clouddn.com/python%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86.jpg" alt=""><br>《python网络数据采集》 读后感&amp;笔记<br><a id="more"></a></p>
<h1 id="网络采集基本知识"><a href="#网络采集基本知识" class="headerlink" title="网络采集基本知识"></a>网络采集基本知识</h1><h2 id="互联网基础知识"><a href="#互联网基础知识" class="headerlink" title="互联网基础知识"></a>互联网基础知识</h2><ol>
<li><p>常见的互联网数据交换方式<br>①：请求域名的服务器地址<br>②：服务器间请求资源（网页，图片等）<br>③：服务器上传资源<br><img src="http://note.youdao.com/favicon.ico" alt="常见客户端-服务器互联网模型数据交换方式"></p>
</li>
<li><p>协议的定义和常见类型<br>每个协议都为请求头定义了不同的字段，采用不同的数据编码、收发地址或名称，以及其他数据类型。<br>①：<strong>HTTP（Hypertext  Transfer Protocol，超文本传输协议）</strong>：用于远程络服务器通信（网站信息的请求、发送和接收）的协议<br>②：<strong>VOIP协议</strong>：打电话<br>③：<strong>SMTP协议</strong>：收邮件<br>④：<strong>FTP协议</strong>：上传邮件    </p>
</li>
<li><p>HTTP协议简介<br>①：<strong>组成</strong>：一个HTTP消息包括两部分：头字段（header field）和数据字段（data field）。每个头字段由一对标题和值构成。这些字段的标题是HTTP标准预先定义好的。<br>②：<strong>常见的头字段</strong>：<br>|名  称|描  述|示  例<br>|-|-|-<br>|User-Agent|字符串，表示发出请求的浏览器和操作系统信息|Mozilla/5.0  (X11;  Ubuntu;  Linux  x86_64;  rv:28.0) Gecko/20100101 Firefox/28.</p>
</li>
</ol>
<h2 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h2><p>安装<br>运行<br>建立可靠的网络连接</p>
<h2 id="HTML解析"><a href="#HTML解析" class="headerlink" title="HTML解析"></a>HTML解析</h2><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><h3 id="Lambda表达式"><a href="#Lambda表达式" class="headerlink" title="Lambda表达式"></a>Lambda表达式</h3><h1 id="初级采集处理"><a href="#初级采集处理" class="headerlink" title="初级采集处理"></a>初级采集处理</h1><h2 id="采集遍历单个域名"><a href="#采集遍历单个域名" class="headerlink" title="采集遍历单个域名"></a>采集遍历单个域名</h2><h2 id="采集整个网站"><a href="#采集整个网站" class="headerlink" title="采集整个网站"></a>采集整个网站</h2><h2 id="通过互联网采集"><a href="#通过互联网采集" class="headerlink" title="通过互联网采集"></a>通过互联网采集</h2><h2 id="通过Scrapy采集"><a href="#通过Scrapy采集" class="headerlink" title="通过Scrapy采集"></a>通过Scrapy采集</h2><h1 id="中级采集处理"><a href="#中级采集处理" class="headerlink" title="中级采集处理"></a>中级采集处理</h1><h2 id="通过API采集"><a href="#通过API采集" class="headerlink" title="通过API采集"></a>通过API采集</h2><h3 id="Twitter-API"><a href="#Twitter-API" class="headerlink" title="Twitter API"></a>Twitter API</h3><h3 id="Google-API"><a href="#Google-API" class="headerlink" title="Google API"></a>Google API</h3><h2 id="存储数据"><a href="#存储数据" class="headerlink" title="存储数据"></a>存储数据</h2><h3 id="数据存储到CSV"><a href="#数据存储到CSV" class="headerlink" title="数据存储到CSV"></a>数据存储到CSV</h3><h3 id="数据存储到MySQL"><a href="#数据存储到MySQL" class="headerlink" title="数据存储到MySQL"></a>数据存储到MySQL</h3><h2 id="读取文档"><a href="#读取文档" class="headerlink" title="读取文档"></a>读取文档</h2><h3 id="文档编码"><a href="#文档编码" class="headerlink" title="文档编码"></a>文档编码</h3><h3 id="纯文本"><a href="#纯文本" class="headerlink" title="纯文本"></a>纯文本</h3><h3 id="CSV"><a href="#CSV" class="headerlink" title="CSV"></a>CSV</h3><h3 id="Word"><a href="#Word" class="headerlink" title="Word"></a>Word</h3><h3 id="PDF"><a href="#PDF" class="headerlink" title="PDF"></a>PDF</h3><h2 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h2><h3 id="直接编写代码后清洗数据"><a href="#直接编写代码后清洗数据" class="headerlink" title="直接编写代码后清洗数据"></a>直接编写代码后清洗数据</h3><h3 id="数据存储后清洗数据"><a href="#数据存储后清洗数据" class="headerlink" title="数据存储后清洗数据"></a>数据存储后清洗数据</h3><h1 id="高级采集处理"><a href="#高级采集处理" class="headerlink" title="高级采集处理"></a>高级采集处理</h1><h2 id="穿越网页表单与登录窗口进行采集"><a href="#穿越网页表单与登录窗口进行采集" class="headerlink" title="穿越网页表单与登录窗口进行采集"></a>穿越网页表单与登录窗口进行采集</h2><h2 id="JavaScript采集"><a href="#JavaScript采集" class="headerlink" title="JavaScript采集"></a>JavaScript采集</h2><h2 id="远程采集"><a href="#远程采集" class="headerlink" title="远程采集"></a>远程采集</h2><h3 id="远程采集工具包和资源"><a href="#远程采集工具包和资源" class="headerlink" title="远程采集工具包和资源"></a>远程采集工具包和资源</h3><h3 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h3><ol>
<li>避免IP地址被封杀</li>
<li>移植性与扩展性</li>
</ol>
<h3 id="Tor代理服务器"><a href="#Tor代理服务器" class="headerlink" title="Tor代理服务器"></a>Tor代理服务器</h3><h3 id="远程主机"><a href="#远程主机" class="headerlink" title="远程主机"></a>远程主机</h3><ol>
<li>从网站主机运行</li>
<li>从云主机运行</li>
</ol>
<h2 id="避免采集陷阱"><a href="#避免采集陷阱" class="headerlink" title="避免采集陷阱"></a>避免采集陷阱</h2><h3 id="修改请求头"><a href="#修改请求头" class="headerlink" title="修改请求头"></a>修改请求头</h3><h3 id="处理cookie"><a href="#处理cookie" class="headerlink" title="处理cookie"></a>处理cookie</h3><h3 id="常见表单安全措施"><a href="#常见表单安全措施" class="headerlink" title="常见表单安全措施"></a>常见表单安全措施</h3><ol>
<li>隐含输入字段值</li>
<li></li>
</ol>
<h2 id="自然语言处理"><a href="#自然语言处理" class="headerlink" title="自然语言处理"></a>自然语言处理</h2><h3 id="自然语言工具包"><a href="#自然语言工具包" class="headerlink" title="自然语言工具包"></a>自然语言工具包</h3><h3 id="马尔可夫模型"><a href="#马尔可夫模型" class="headerlink" title="马尔可夫模型"></a>马尔可夫模型</h3><h2 id="图像识别与文字处理"><a href="#图像识别与文字处理" class="headerlink" title="图像识别与文字处理"></a>图像识别与文字处理</h2><h3 id="图像识别与文字处理工具包"><a href="#图像识别与文字处理工具包" class="headerlink" title="图像识别与文字处理工具包"></a>图像识别与文字处理工具包</h3><h3 id="操作：处理格式规范的文字"><a href="#操作：处理格式规范的文字" class="headerlink" title="操作：处理格式规范的文字"></a>操作：处理格式规范的文字</h3><h3 id="操作：读取验证码与训练Tesseract"><a href="#操作：读取验证码与训练Tesseract" class="headerlink" title="操作：读取验证码与训练Tesseract"></a>操作：读取验证码与训练Tesseract</h3><h3 id="操作：获取验证码提交答案"><a href="#操作：获取验证码提交答案" class="headerlink" title="操作：获取验证码提交答案"></a>操作：获取验证码提交答案</h3><h2 id="爬虫测试网站"><a href="#爬虫测试网站" class="headerlink" title="爬虫测试网站"></a>爬虫测试网站</h2><h3 id="Python单元测试"><a href="#Python单元测试" class="headerlink" title="Python单元测试"></a>Python单元测试</h3><h3 id="Selenium单元测试"><a href="#Selenium单元测试" class="headerlink" title="Selenium单元测试"></a>Selenium单元测试</h3><h3 id="两种测试的选择"><a href="#两种测试的选择" class="headerlink" title="两种测试的选择"></a>两种测试的选择</h3><h1 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h1><hr>
<blockquote>
<p>向网络服务器发送GET请求以获取具体网页，再从网页中读取HTML内容，最后做一些简单的信息提取，将我们要寻找的内容分离出来。</p>
</blockquote>
<h1 id="标准库"><a href="#标准库" class="headerlink" title="标准库"></a>标准库</h1><h2 id="urllib"><a href="#urllib" class="headerlink" title="urllib"></a>urllib</h2><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://docs.python.org/3/library/urllib.html" target="_blank" rel="external">官方API</a>  </p>
<ol>
<li>urllib是Python的标准库（就是说你不用额外安装就可以运行这个例子），包含了从网络请求数据，处理cookie，甚至改变像请求头和用户代理这些元数据的函数</li>
<li>Python 3.x里，urllib2改名为urllib，被分成一些子模块：urllib.request、urllib.parse和urllib.error。尽管函数名称大多和原来一样，但是在用新的urllib库时需要注意哪些函数被移动到子模块里了  </li>
<li>urlopen用来打开并读取一个从网络获取的远程对象（读取HTML文件、图像文件，或其他任何文件流）</li>
</ol>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><ol>
<li><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line">html = urlopen(<span class="string">"https://python3-cookbook.readthedocs.io/zh_CN/latest/index.html#"</span>)</div><div class="line">print(html.read())</div></pre></td></tr></table></figure>
</li>
<li><p>用Python抓网页的注意事项：<a href="http://www.mamicode.com/info-detail-314948.html" target="_blank" rel="external">http://www.mamicode.com/info-detail-314948.html</a></p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ovot91g2e.bkt.clouddn.com/python%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;《python网络数据采集》 读后感&amp;amp;笔记&lt;br&gt;
    
    </summary>
    
      <category term="工作" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="互联网技能" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/%E4%BA%92%E8%81%94%E7%BD%91%E6%8A%80%E8%83%BD/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>流畅的Python</title>
    <link href="http://yoursite.com/2017/09/03/%E6%B5%81%E7%95%85%E7%9A%84Python/"/>
    <id>http://yoursite.com/2017/09/03/流畅的Python/</id>
    <published>2017-09-03T15:13:40.000Z</published>
    <updated>2017-09-07T15:44:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ovot91g2e.bkt.clouddn.com/%E6%B5%81%E7%95%85%E7%9A%84Python.png" alt=""><br>《流畅的Python》 读后感&amp;笔记<br><a id="more"></a></p>
<h1 id="Python的数据模型"><a href="#Python的数据模型" class="headerlink" title="Python的数据模型"></a>Python的数据模型</h1><blockquote>
<p>讲解Python 的数据模型（datamodel），以及如何为了保证行为一致性而使用特殊方法</p>
</blockquote>
<h1 id="Python的数据结构"><a href="#Python的数据结构" class="headerlink" title="Python的数据结构"></a>Python的数据结构</h1><blockquote>
<p>序列（sequence）、映射（mapping）和集合（set），字符串（str）和字节序列（bytes）</p>
</blockquote>
<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h2 id="字典和集合"><a href="#字典和集合" class="headerlink" title="字典和集合"></a>字典和集合</h2><h2 id="文本和字节序列"><a href="#文本和字节序列" class="headerlink" title="文本和字节序列"></a>文本和字节序列</h2><h1 id="函数视为对象"><a href="#函数视为对象" class="headerlink" title="函数视为对象"></a>函数视为对象</h1><blockquote>
<p>把函数作为一等对象（first-order object）来使用。如何利用闭包（closure）的概念来实现函数装饰器（function decorator）。还包括Python的这些基本概念：可调用（callable）、函数属性（functionattribute）、内省（introspection）、参数注解（parameter annotation）和Python 3 里新出现的nonlocal声明。</p>
</blockquote>
<h2 id="一等函数简介"><a href="#一等函数简介" class="headerlink" title="一等函数简介"></a>一等函数简介</h2><h2 id="一等函数实现的设计模式"><a href="#一等函数实现的设计模式" class="headerlink" title="一等函数实现的设计模式"></a>一等函数实现的设计模式</h2><h2 id="函数装饰器和闭包"><a href="#函数装饰器和闭包" class="headerlink" title="函数装饰器和闭包"></a>函数装饰器和闭包</h2><p># </p>
<blockquote>
<p>解释了引用（reference）的原理、“可变性”的概念、实例的生命周期、如何构建自定义的集合类型和ABC、多重继承该怎么理顺、什么时候应该使用操作符重载及其方法。</p>
</blockquote>
<h1 id="控制流程"><a href="#控制流程" class="headerlink" title="控制流程"></a>控制流程</h1><blockquote>
<p>从生成器（generator）上下文管理器（context manager）和协程（coroutine），涵盖新增的功能强大但又不容易理解的yield from语法。这一部分以并发性和面向事件的I/O来结尾，跟并发性相关的是collections.futures这个很新的包，它借助futures包把线程和进程的概念给封装了起来；而跟面向事件I/O相关的则是asyncio，它的背后是基于协程和yieldfrom的futures包。</p>
</blockquote>
<h2 id="可迭代的对象、迭代器和生成器"><a href="#可迭代的对象、迭代器和生成器" class="headerlink" title="可迭代的对象、迭代器和生成器"></a>可迭代的对象、迭代器和生成器</h2><h2 id="上下文管理器和else块"><a href="#上下文管理器和else块" class="headerlink" title="上下文管理器和else块"></a>上下文管理器和else块</h2><h2 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h2><h2 id="使用期物处理并发"><a href="#使用期物处理并发" class="headerlink" title="使用期物处理并发"></a>使用期物处理并发</h2><h2 id="使用asyncio包处理并发"><a href="#使用asyncio包处理并发" class="headerlink" title="使用asyncio包处理并发"></a>使用asyncio包处理并发</h2><h1 id="元编程"><a href="#元编程" class="headerlink" title="元编程"></a>元编程</h1><blockquote>
<p>如何动态创建带属性的类，用以处理诸如JSON这类半结构化的数据。然后会从大家已经熟悉的特性（property）机制入手，用描述符从底层来解释Python 对象属性的存取。同时，函数、方法和描述符的关系也会被梳理一遍。第六部分会从头至尾地实现一个字段验证器，在这个过程中我们会遇到一些微妙的问题，然后在最后一章中就自然引出像类装饰器（class decorator）和元类（metaclass）这些高级的概念</p>
</blockquote>
<h2 id="动态属性和特性"><a href="#动态属性和特性" class="headerlink" title="动态属性和特性"></a>动态属性和特性</h2><h2 id="属性描述符"><a href="#属性描述符" class="headerlink" title="属性描述符"></a>属性描述符</h2><h2 id="类元编程"><a href="#类元编程" class="headerlink" title="类元编程"></a>类元编程</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ovot91g2e.bkt.clouddn.com/%E6%B5%81%E7%95%85%E7%9A%84Python.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;《流畅的Python》 读后感&amp;amp;笔记&lt;br&gt;
    
    </summary>
    
      <category term="工作" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="互联网技能" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/%E4%BA%92%E8%81%94%E7%BD%91%E6%8A%80%E8%83%BD/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python语言及应用</title>
    <link href="http://yoursite.com/2017/09/03/python%E8%AF%AD%E8%A8%80%E5%8F%8A%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2017/09/03/python语言及应用/</id>
    <published>2017-09-03T04:23:45.000Z</published>
    <updated>2017-09-07T16:06:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ovot91g2e.bkt.clouddn.com/Python%20%E8%AF%AD%E8%A8%80%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8..png" alt=""><br>《Python 语言及其应用》 读后感&amp;笔记<br><a id="more"></a></p>
<h1 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h1><p><img src="http://ovot91g2e.bkt.clouddn.com/Python%20%E8%AF%AD%E8%A8%80%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A801.jpg" alt=""></p>
<h1 id="Pythonの资源网站"><a href="#Pythonの资源网站" class="headerlink" title="Pythonの资源网站"></a>Pythonの资源网站</h1><p><a href="http://www.python88.com/" target="_blank" rel="external">论坛：py社区</a><br><a href="http://www.codingpy.com/" target="_blank" rel="external">论坛：编程派</a><br><a href="http://www.okpython.com/" target="_blank" rel="external">论坛：Python中国</a><br><a href="http://docs.python.org/3/library/" target="_blank" rel="external">标准库</a><br><a href="https://pypi.python.org/pypi" target="_blank" rel="external">第三方库</a><br><a href="https://github.com/trending?l=python" target="_blank" rel="external">Github</a><br><a href="http://code.activestate.com/recipes/langs/python/" target="_blank" rel="external">Python recipes</a><br><a href="http://legacy.python.org/dev/peps/pep-0008/#constants" target="_blank" rel="external">PEP8格式规范</a></p>
<h1 id="Pythonの技巧"><a href="#Pythonの技巧" class="headerlink" title="Pythonの技巧"></a>Pythonの技巧</h1><blockquote>
<p>介绍<br>Python安装、使用IDE、测试、调试、日志、版本控制和文档，还会介绍如何寻找并安装有用的第三方包、打包自己的代码以供重用，以及如何寻找更多有用的信息</p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://www.python.org/downloads/" target="_blank" rel="external">官网地址</a>  </p>
<h3 id="MAC"><a href="#MAC" class="headerlink" title="MAC"></a>MAC</h3><p>点 击<a href="https://www.python.org/ftp/python/3.4.1/python-3.4.1-macosx10.6.dmg" target="_blank" rel="external">Mac  OS  X  64-bit/32-bit  installer</a>  链接下载Mac中使用的.dmg文件。下载完成后双击它，桌面上会弹出一个包含4个图标的窗口。右键单击Python.mpkg，在弹出的对话框中点击“打开”。点击大约三次“继续”按钮，期间会显示一些法律声明，最后的对话框出现后点击“安装”。<br>Python 3的所有内容都会被安装到 <strong>/usr/local/bin/python3</strong> ，不会对电脑上已安装的Python 2产生任何影响。</p>
<h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>参考之前的教程</p>
<h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>点击适当的安装包链接（.msi文件）。下载完成后双击打开，并根据安装指导进行安装<br><a href="https://www.python.org/ftp/python/3.4.1/python-3.4.1.msi" target="_blank" rel="external">Windows  x86  MSI  installer 32位</a><br><a href="https://www.python.org/ftp/python/3.4.1/python-3.4.1.amd64.msi" target="_blank" rel="external">Windows  x86-64  MSI  installer 64位</a></p>
<h2 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h2><p>有3种安装Python包的方法</p>
<ol>
<li>使用pip</li>
<li>使用包管理工具</li>
<li>从源代码安装</li>
</ol>
<h2 id="IDE的使用"><a href="#IDE的使用" class="headerlink" title="IDE的使用"></a>IDE的使用</h2><p>==Todo==</p>
<h2 id="代码的测试"><a href="#代码的测试" class="headerlink" title="代码的测试"></a>代码的测试</h2><h3 id="代码风格测试"><a href="#代码风格测试" class="headerlink" title="代码风格测试"></a>代码风格测试</h3><blockquote>
<p>pylint、pyflakes和pep8检查代码</p>
</blockquote>
<p>==Todo==</p>
<h3 id="程序逻辑测试"><a href="#程序逻辑测试" class="headerlink" title="程序逻辑测试"></a>程序逻辑测试</h3><ol>
<li>使用unittest测试  </li>
<li>==Todo==  </li>
<li>使用doctest测试  </li>
<li>==Todo==  </li>
<li>使用nose测试    </li>
<li>==Todo==  </li>
<li>使用测试框架  </li>
<li>==Todo==  </li>
<li>使用持续集成<br>①：<a href="http://buildbot.net/" target="_blank" rel="external">buildbot</a><br>用Python写成的源码控制系统，可以自动构建、测试和发布。<br>②：<a href="http://jenkins-ci.org/" target="_blank" rel="external">jenkins</a><br>用Java写成，应该是目前最受欢迎的CI(持续集成)系统。<br>③：<a href="http://travis-ci.com/" target="_blank" rel="external">travis-ci</a><br>这个自动化项目托管在GitHub上 </li>
</ol>
<h2 id="代码的调试"><a href="#代码的调试" class="headerlink" title="代码的调试"></a>代码的调试</h2><p>==Todo==</p>
<h2 id="错误日志处理"><a href="#错误日志处理" class="headerlink" title="错误日志处理"></a>错误日志处理</h2><p>==Todo==</p>
<h2 id="优化代码"><a href="#优化代码" class="headerlink" title="优化代码"></a>优化代码</h2><h3 id="测量时间"><a href="#测量时间" class="headerlink" title="测量时间"></a>测量时间</h3><p>==Todo==</p>
<h3 id="算法和数据结构"><a href="#算法和数据结构" class="headerlink" title="算法和数据结构"></a>算法和数据结构</h3><p>==Todo==</p>
<h1 id="Pythonの初级"><a href="#Pythonの初级" class="headerlink" title="Pythonの初级"></a>Pythonの初级</h1><h2 id="对象和类"><a href="#对象和类" class="headerlink" title="对象和类"></a>对象和类</h2><blockquote>
<p>学习对象和类的适用场景</p>
</blockquote>
<h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><ol>
<li>对象就像一个盒子，里面装的是不同数据。  </li>
<li>对象的类型还决定了它装着的数据是允许被修改的变量（可变的）还是不可被修改的常量（不可变的）  </li>
<li>不可变对象可理解为一个透明但封闭的盒子：可以看到里面装的数据，但是无法改变它。  可变对象可理解为一个开着口的盒子：不仅可以看到里面的数据，还可以拿出来修改它，但无法改变这个盒本身，即无法改变对象的类型。</li>
</ol>
<h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><ol>
<li>类是对象的定义</li>
<li>Python中“类”和“类型”一般不加区分</li>
</ol>
<h2 id="原子-基本元素：变量、数字、字符串"><a href="#原子-基本元素：变量、数字、字符串" class="headerlink" title="原子/基本元素：变量、数字、字符串"></a>原子/基本元素：变量、数字、字符串</h2><blockquote>
<p>介绍最简单的数据类型：布尔值、整数、浮点数和文本字符串，学习基础的数学和文本操作。</p>
</blockquote>
<h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ol>
<li>变量只是一个名字，就像贴在盒子上的标签。</li>
<li>赋值操作并不会实际复制值，只是为数据对象取个相关的名字。名字指对象的引用而不是对象本身。</li>
<li>变量名只能包含以下字符：<br>• 小写字母（a~z）<br>• 大写字母（A~Z）<br>• 数字（0~9）<br>• 下划线（_）  </li>
<li>变量名不允许以数字开头；以下划线开头的名字有特殊的含义</li>
</ol>
<h3 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h3><h4 id="运算符、优先级和数学函数"><a href="#运算符、优先级和数学函数" class="headerlink" title="运算符、优先级和数学函数"></a>运算符、优先级和数学函数</h4><ol>
<li><strong>运算符</strong></li>
</ol>
<table>
<thead>
<tr>
<th>描述</th>
<th>示例</th>
<th>运算结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>+</td>
<td>加法</td>
<td>5 + 8</td>
<td>13</td>
</tr>
<tr>
<td>-</td>
<td>减法</td>
<td>90 – 10</td>
<td>80</td>
</tr>
<tr>
<td>*</td>
<td>乘法</td>
<td>4 * 7</td>
<td>28</td>
</tr>
<tr>
<td>/</td>
<td>浮点数除法</td>
<td>7 / 2</td>
<td>3.5</td>
</tr>
<tr>
<td>//</td>
<td>整数除法</td>
<td>7 // 2</td>
<td>3</td>
</tr>
<tr>
<td>%</td>
<td>模（求余）</td>
<td>7 % 3</td>
<td>1</td>
</tr>
<tr>
<td><code>**</code></td>
<td>幂</td>
<td>3<code>**</code> 4</td>
<td>81</td>
</tr>
</tbody>
</table>
<ol>
<li><strong>优先级</strong><br>详见附录C      </li>
<li><strong>数学函数</strong><br>详见附录C    </li>
</ol>
<h4 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h4><ol>
<li>可以显式地在前面加上正号+或负号-</li>
<li>布尔、浮点数、科学计数等数据类型转换成整数</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">print(int(<span class="keyword">True</span>))  <span class="comment"># 1</span></div><div class="line">print(int(<span class="keyword">False</span>))  <span class="comment"># 0</span></div></pre></td></tr></table></figure>
<h4 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h4><ol>
<li>包含小数点的数字</li>
<li>布尔、整数、科学计数等数据类型转换成浮点数</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">print(float(<span class="keyword">True</span>))  <span class="comment"># 1.0</span></div><div class="line">print(float(<span class="keyword">False</span>))  <span class="comment"># 0.0</span></div><div class="line">print(float(<span class="string">'98'</span>))  <span class="comment"># 98.0</span></div><div class="line">print(float(<span class="string">'-1'</span>))  <span class="comment"># -1.0</span></div><div class="line">print(float(<span class="string">'1.0e4'</span>))  <span class="comment"># 10000.0</span></div></pre></td></tr></table></figure>
<h4 id="进制数"><a href="#进制数" class="headerlink" title="进制数"></a>进制数</h4><ol>
<li>0b或0B代表二进制（以2为底）</li>
<li>0o或0O代表八进制（以8为底）</li>
<li>0x或0X代表十六进制（以16为底）</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">print(<span class="number">0b10</span>)  <span class="comment"># 2</span></div><div class="line">print(<span class="number">0o10</span>)  <span class="comment"># 8</span></div><div class="line">print(<span class="number">0x10</span>)  <span class="comment"># 10</span></div></pre></td></tr></table></figure>
<h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>与其他语言不同的是Python字符串是不可变的（无法对原字符串进行修改，但可以将字符串的一部分复制到新字符串来达到相同的修改效果）</p>
<h4 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h4><ol>
<li>创建–使用引号  <blockquote>
<p>字符串是单行输出：使用单引号或双引号包裹<br>字符串是多行输出：使用3个单引号包裹</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">print(<span class="string">'Vito'</span>)</div><div class="line">print(<span class="string">"Vito"</span>)</div><div class="line"></div><div class="line">poem1 =<span class="string">"""There was a Young Lady of Norway,</span></div><div class="line"><span class="string">Who casually sat in a doorway; </span></div><div class="line"><span class="string">When the door squeezed her flat, </span></div><div class="line"><span class="string">She exclaimed, "What of that?" </span></div><div class="line"><span class="string">This courageous Young Lady of Norway."""</span></div><div class="line">print(poem1)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">Vito</span></div><div class="line"><span class="string">Vito</span></div><div class="line"><span class="string">There was a Young Lady of Norway,</span></div><div class="line"><span class="string">Who casually sat in a doorway; </span></div><div class="line"><span class="string">When the door squeezed her flat, </span></div><div class="line"><span class="string">She exclaimed, "What of that?" </span></div><div class="line"><span class="string">This courageous Young Lady of Norway.</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>类型转换–使用<code>str（）</code>   </li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">print(str(<span class="number">98.6</span>))</div><div class="line">print(str(<span class="number">1.0e4</span>))</div><div class="line">print(<span class="keyword">True</span>)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">98.6</span></div><div class="line"><span class="string">10000.0</span></div><div class="line"><span class="string">True</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>转义–使用<code>\</code>  <blockquote>
<p>①：<code>\n</code>，代表换行符，用于在一行内创建多行字符串<br>②：<code>\t</code>，代表tab制表符，用于对齐文本<br>③：<code>\&#39;</code>和<code>\&quot;</code>，代表单、双引号<br>④：<code>\\</code>, 代表一个反斜线字符  </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">print(<span class="string">'a\tbc'</span>)</div><div class="line">palindrome = <span class="string">'A man,\nA plan,\nA canal:\nPanama.'</span></div><div class="line">print(palindrome)</div><div class="line">speech = <span class="string">'Today we honor our friend, the backslash: \\.'</span></div><div class="line">print(speech)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">a	bc</span></div><div class="line"><span class="string">A man,</span></div><div class="line"><span class="string">A plan,</span></div><div class="line"><span class="string">A canal:</span></div><div class="line"><span class="string">Panama.</span></div><div class="line"><span class="string">Today we honor our friend, the backslash: \.</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>拼接–使用<code>+</code>  </li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">a = <span class="string">'Vito '</span></div><div class="line">b = <span class="string">'Wong'</span></div><div class="line">print(a+b)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">Vito Wong</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>复制–使用<code>*</code>  </li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">a = <span class="string">'Va'</span>*<span class="number">2</span> + <span class="string">'\n'</span></div><div class="line">b = <span class="string">'Good luck!'</span></div><div class="line">print(a+b)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">VaVa</span></div><div class="line"><span class="string">Good luck!</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>提取–使用<code>[]</code>  <blockquote>
<p>①：[]中的数字理解为偏移量<br>②：偏移量从0开始增加到字符串长度-1<br>③：指定的偏移量超过了字符串的长度会报错  </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">letters = <span class="string">'abcdefghijklmnopqrstuvwxyz'</span></div><div class="line">print(letters[<span class="number">0</span>])</div><div class="line">print(letters[<span class="number">-1</span>])</div><div class="line"><span class="comment"># print(letters[100]) # IndexError: string index out of range</span></div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">a</span></div><div class="line"><span class="string">z</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>分片–使用<code>[start:end:step]</code>  <blockquote>
<p>①：起始偏移量start、终止偏移量end以及可选的步长step来定义一个分片<br>②: 偏移量从左至右从0开始，依次增加；从右至左从-1开始，依次减小。如果省略start，分片会默认使用偏移量0（开头）；如果省略end，分片会默认使用偏移量-1或<strong>len(字符串名)</strong>（结尾）。<br>③：提取操作不包含最后一个偏移量对应的字符<br>④：  </p>
<blockquote>
<p>• [:]提取从开头到结尾的整个字符串<br>• [start:]从start提取到结尾<br>• [:end]从开头提取到end - 1<br>• [start:end]从start提取到end - 1<br>• [start:end:step]从start提取到end - 1，每step个字符提取一个  </p>
</blockquote>
</blockquote>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">letters = &apos;abcdefghijklmnopqrstuvwxyz&apos;</div><div class="line">print(letters[:])  # 等价于[0:-1]和[0:len(letters)],也就是提取整个字符串</div><div class="line">print(letters[::-1])  # 指定的步长为负数则从右到左反向进行提取操作</div><div class="line">print(letters[1:3])  # 截取偏移量是1到3的字符串，不包含偏移量是3的字符</div><div class="line">print(letters[-3:-1])  # 截取偏移量是-3到-1的字符串，不包含偏移量是-1的字符</div><div class="line">print(letters[::2])  # 步长设为2</div><div class="line"></div><div class="line">&quot;&quot;&quot;输出</div><div class="line">abcdefghijklmnopqrstuvwxyz</div><div class="line">zyxwvutsrqponmlkjihgfedcba</div><div class="line">bc</div><div class="line">xy</div><div class="line">acegikmoqsuwy</div><div class="line">&quot;&quot;&quot;</div></pre></td></tr></table></figure>
<ol>
<li><p>获取长度–使用<code>len()</code> </p>
<blockquote>
<p>len()函数可用于计算字符串包含的字符数</p>
</blockquote>
</li>
<li><p>分割–使用<code>split()</code>  </p>
<blockquote>
<p>split()用于基于分隔符将字符串分割成由若干<strong>子串组成的列表</strong><br>split()将默认使用空白字符——换行符、空格、制表符</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">website = <span class="string">"Google;    Biadu; Ali; JD  "</span></div><div class="line">print(website)</div><div class="line">print(website.split())</div><div class="line">print(website.strip().replace(<span class="string">' '</span>, <span class="string">''</span>).split(<span class="string">";"</span>))  <span class="comment"># strip()删除字符串两边的空格；replace(' ', '')删除字符串中间的空格；spilt(";")以;作为分隔符处理</span></div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">Google;    Biadu; Ali; JD  </span></div><div class="line"><span class="string">['Google;', 'Biadu;', 'Ali;', 'JD']</span></div><div class="line"><span class="string">['Google', 'Biadu', 'Ali', 'JD']</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>合并–使用<code>join()</code>  <blockquote>
<p>join()用于将包含若干子串的列表分解后将这些子串合成一个完整的大的字符串</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">website_list = [<span class="string">'Google'</span>, <span class="string">'Biadu'</span>, <span class="string">'Ali'</span>, <span class="string">'JD'</span>]</div><div class="line">website_string1 = <span class="string">','</span>.join(website_list)</div><div class="line">website_string2 = <span class="string">'\n'</span>.join(website_list)</div><div class="line">print(website_string1)</div><div class="line">print(website_string2)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">Google,Biadu,Ali,JD</span></div><div class="line"><span class="string">Google</span></div><div class="line"><span class="string">Biadu</span></div><div class="line"><span class="string">Ali</span></div><div class="line"><span class="string">JD</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>剪接，大小写转换，对齐  <blockquote>
<p>①：由于字符串是不可变的，实际上没有一个对字符串真正做了修改。仅是获取了setup的值进行操作后将操作结果赋值给了另一个新的字符串而已。<br>②：  </p>
<blockquote>
<p>• strip()：剪接<br>• upper()：所有字母都变成大写<br>• lower()：所有字母转换成小写<br>• title()：所有单词的开头字母变成大写<br>• swapcase()：字母的大小写反转<br>• ljust()：左对齐<br>• rjust()：右对齐<br>• center()：居中  </p>
</blockquote>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">setup = <span class="string">'     A duck goes into a bar...  '</span></div><div class="line">print(setup.strip(<span class="string">'.'</span>))</div><div class="line">print(setup.upper())</div><div class="line">print(setup.lower())</div><div class="line">print(setup.swapcase())</div><div class="line">print(setup.title())</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">     A duck goes into a bar...  </span></div><div class="line"><span class="string">     A DUCK GOES INTO A BAR...  </span></div><div class="line"><span class="string">     a duck goes into a bar...  </span></div><div class="line"><span class="string">     a DUCK GOES INTO A BAR...  </span></div><div class="line"><span class="string">     A Duck Goes Into A Bar... </span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>替换–使用<code>replace()</code>   <blockquote>
<p>①：replace()用于简单的子串替换<br>②：需要传入的参数包括：需要被替换的子串，用于替换的新子串，以及需要替换多少处。最后一个参数如果省略则默认只替换第一次出现的位置<br>③：若要替换的子串是一个完整的词，或者某一个词的开头借助正则表达式，不能使用replace方法    </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">setup = <span class="string">'     a duck goes into a bar...  '</span></div><div class="line">print(setup.replace(<span class="string">'duck'</span>, <span class="string">'chicken'</span>))</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">     a chicken goes into a bar...  </span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
</blockquote>
</li>
</ol>
<h2 id="分子-容器：列表、元组、字典与集合"><a href="#分子-容器：列表、元组、字典与集合" class="headerlink" title="分子/容器：列表、元组、字典与集合"></a>分子/容器：列表、元组、字典与集合</h2><blockquote>
<p>学习高级内置数据结构：列表、元组、字典和集合。用与构建更复杂的结构并学到如何使用迭代器和推导式来遍历容器。<br>Python共有3种序列结构：字符串，元组和列表。与字符串不同的是，元组和列表并不要求所含元素的种类相同，每个元素都可以是任何Python类型的对象。</p>
</blockquote>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h4><blockquote>
<p>①：与字符串不同，列表是元素种类不一定相同且元素可变的。可以直接对原始列表进行修改：添加新元素、删除或覆盖已有元素。<br>②：相同值的元素允许出现多次。<br>③：适合利用顺序和位置定位某一元素，尤其是当元素的顺序或内容经常发生改变时。</p>
</blockquote>
<h4 id="操作-1"><a href="#操作-1" class="headerlink" title="操作"></a>操作</h4><ol>
<li>创建– 使用<code>[]</code>或<code>list()</code> <blockquote>
<p>①：由零个或多个元素组成，元素之间用逗号分开，整个列表被方括号所包裹或使用list()函数来创建一个空列表<br>②：如果你仅仅想要记录一些互不相同的值，而不在乎它们之间的顺序关系，集合（set）会是一个更好的选择。    </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">empty_list1 = []</div><div class="line">empty_list1 = list()</div><div class="line">weekdays = [<span class="string">'Monday'</span>, <span class="string">'Tuesday'</span>, <span class="string">'Wednesday'</span>, <span class="string">'Thursday'</span>, <span class="string">'Friday'</span>]</div><div class="line">firt_names = [<span class="string">'Graham'</span>, <span class="string">'John'</span>, <span class="string">'Terry'</span>, <span class="string">'Terry'</span>, <span class="string">'Michael'</span>]  <span class="comment"># 列表中的值允许重复</span></div></pre></td></tr></table></figure>
<ol>
<li>其他数据类型转换成列表– 使用<code>list()</code>   </li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">print(list(<span class="string">'cat'</span>))  <span class="comment"># 将一个字符串转换成了由单个字母组成的列表</span></div><div class="line">a_tuple = (<span class="string">'ready'</span>, <span class="string">'aim'</span>, <span class="string">'fire'</span>)  <span class="comment"># 将一个元组转换成了列表</span></div><div class="line">print(list(a_tuple))</div><div class="line">birthday = <span class="string">'1/6/1952'</span>  <span class="comment"># 使用split()可以依据分隔符将字符串切割成由若干子串组成的列表</span></div><div class="line">print(birthday.split(<span class="string">'/'</span>))</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">['c', 'a', 't']</span></div><div class="line"><span class="string">['ready', 'aim', 'fire']</span></div><div class="line"><span class="string">['1', '6', '1952']</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>列表转换为字符串–使用<code>join()</code>   <blockquote>
<p>①：join()实际上是一个字符串方法，而不是列表方法。不能通过list.join(‘,’)进行调用。<br>②：join()是split()的逆过程</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">list_animal = list(<span class="string">'cat'</span>)</div><div class="line">list_animal[<span class="number">0</span>] = <span class="string">'b'</span></div><div class="line">print(list_animal)</div><div class="line">str_animal = <span class="string">''</span>.join(list_animal)</div><div class="line">print(str_animal)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">['b', 'a', 't']</span></div><div class="line"><span class="string">bat</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">list_website = [<span class="string">'www'</span>, <span class="string">'Google'</span>, <span class="string">'com'</span>]</div><div class="line">str1_website = <span class="string">'.'</span>.join(list_website)</div><div class="line">str2_website = <span class="string">''</span>.join(list_website)</div><div class="line">print(str1_website)</div><div class="line">print(str2_website)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">www.Google.com</span></div><div class="line"><span class="string">wwwGooglecom</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>修改元素– 使用<code>[offset]</code>    <blockquote>
<p>①：可以通过偏移量访问某元素一样，你也可以通过赋值对它进行修改<br>②：通过这种方式修改字符串中的指定字符，在用join()方法转换成字符串，因为字符串是不可变的。列表是可变的。</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Back_end_language = [<span class="string">'Java'</span>, <span class="string">'Python'</span>, <span class="string">'PHP'</span>]</div><div class="line">Back_end_language[<span class="number">1</span>] = <span class="string">'Shell'</span></div><div class="line">print(Back_end_language)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">['Java', 'Shell', 'PHP']</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>获取元素– 使用<code>[offset]</code> <blockquote>
<p>①：和字符串一样，通过偏移量可以从列表中提取对应位置的元素<br>②：当指定的偏移量小于起始位置或者大于末尾位置时，会产生异常（错误）</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">weekdays = [<span class="string">'Monday'</span>, <span class="string">'Tuesday'</span>, <span class="string">'Wednesday'</span>, <span class="string">'Thursday'</span>, <span class="string">'Friday'</span>]</div><div class="line">print(weekdays[<span class="number">0</span>])</div><div class="line">print(weekdays[<span class="number">1</span>])</div><div class="line">print(weekdays[<span class="number">-1</span>])</div><div class="line"></div><div class="line"><span class="comment"># print(weekdays[7])  # IndexError: list index out of range</span></div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">Monday</span></div><div class="line"><span class="string">Tuesday</span></div><div class="line"><span class="string">Friday</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>指定范围提取元素–使用<code>切片</code>      <blockquote>
<p>①：切片可以提取列表的一个子序列（得到的结果还是一个列表）<br>②：与字符串一样，列表的切片也可以设定除1以外的步长    </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">weekdays = [<span class="string">'Monday'</span>, <span class="string">'Tuesday'</span>, <span class="string">'Wednesday'</span>, <span class="string">'Thursday'</span>, <span class="string">'Friday'</span>]</div><div class="line">print(weekdays[<span class="number">1</span>:<span class="number">3</span>])  <span class="comment"># 包含偏移量是1和2的元素，不包含最后一个偏移量的元素</span></div><div class="line">print(weekdays[::<span class="number">-1</span>])  <span class="comment"># 实现列表逆序</span></div><div class="line">print(weekdays[::<span class="number">-2</span>])  <span class="comment"># 从尾部开始提取，步长为2</span></div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">['Tuesday', 'Wednesday']</span></div><div class="line"><span class="string">['Friday', 'Thursday', 'Wednesday', 'Tuesday', 'Monday']</span></div><div class="line"><span class="string">['Friday', 'Wednesday', 'Monday']</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>添加元素至尾部–使用<code>append()</code>    <blockquote>
<p>由于列表是可变的用append()函数将元素一个个追加到尾部    </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">weekdays = [<span class="string">'Monday'</span>, <span class="string">'Tuesday'</span>, <span class="string">'Wednesday'</span>, <span class="string">'Thursday'</span>, <span class="string">'Friday'</span>]</div><div class="line">weekdays.append(<span class="string">'Staurday'</span>)  <span class="comment"># 只能一个个元素追加至尾部</span></div><div class="line">print(weekdays)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Staurday']</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>插入元素至指定位置–使用<code>insert()</code>  <blockquote>
<p>①：append()函数只能将新元素插入到列表尾部，而使用insert()可以将元素插入到列表的任意位置。<br>②：指定偏移量为0可以插入列表头部。如果指定的偏移量超过了尾部，则会插入到列表最后  </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">weekdays = [<span class="string">'Monday'</span>, <span class="string">'Tuesday'</span>, <span class="string">'Wednesday'</span>, <span class="string">'Thursday'</span>, <span class="string">'Friday'</span>]</div><div class="line">weekdays.insert(<span class="number">0</span>, <span class="string">'Sunday'</span>)  <span class="comment"># 偏移量是0表示头部插入</span></div><div class="line">print(weekdays)</div><div class="line">weekdays.insert(len(weekdays), <span class="string">'Saturday'</span>)  <span class="comment"># 偏移量是len或-1表示尾部部插入</span></div><div class="line"><span class="comment"># weekdays.insert(-1, 'Saturday')</span></div><div class="line">print(weekdays)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']</span></div><div class="line"><span class="string">['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Saturday']</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>合并/延长列表– 使用<code>extend()</code>或<code>+=</code>  <blockquote>
<p>extend()用于将一个列表合并到另一个列表中  </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">weekdays = [<span class="string">'Monday'</span>, <span class="string">'Tuesday'</span>, <span class="string">'Wednesday'</span>, <span class="string">'Thursday'</span>, <span class="string">'Friday'</span>]</div><div class="line">others = [<span class="string">'Saturday'</span>, <span class="string">'Sunday'</span>]</div><div class="line">weekdays.extend(others)</div><div class="line"><span class="comment"># weekdays += others  # 等效extends()方法</span></div><div class="line">print(weekdays)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>删除指定位置的元素–使用<code>del()</code>  <blockquote>
<p>①：del就像是赋值语句（=）的逆过程：它将一个Python对象与它的名字分离。如果这个对象无其他名称引用，则其占用空间也被会清除。<br>②：当列表中一个元素被删除后，位于它后面的元素会自动往前移动填补空出的位置，且列表长度减1    </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">weekdays = [<span class="string">'Monday'</span>, <span class="string">'Tuesday'</span>, <span class="string">'Wednesday'</span>, <span class="string">'Thursday'</span>, <span class="string">'Friday'</span>]</div><div class="line">print(len(weekdays))</div><div class="line"></div><div class="line"><span class="keyword">del</span> weekdays[<span class="number">-1</span>]</div><div class="line">print(len(weekdays))</div><div class="line">print(weekdays)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">5</span></div><div class="line"><span class="string">4</span></div><div class="line"><span class="string">['Monday', 'Tuesday', 'Wednesday', 'Thursday']</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>删除具有指定值的元素–使用<code>remove()</code>    <blockquote>
<p>①：如果不确定或不关心元素在列表中的位置，可以使用remove()根据指定的值删除元素<br>②：当列表中一个元素被删除后，位于它后面的元素会自动往前移动填补空出的位置，且列表长度减1 </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">weekdays = [<span class="string">'Monday'</span>, <span class="string">'Tuesday'</span>, <span class="string">'Wednesday'</span>, <span class="string">'Thursday'</span>, <span class="string">'Friday'</span>]</div><div class="line">print(len(weekdays))</div><div class="line">weekdays.remove(<span class="string">'Wednesday'</span>)</div><div class="line">print(len(weekdays))</div><div class="line">print(weekdays)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">5</span></div><div class="line"><span class="string">4</span></div><div class="line"><span class="string">['Monday', 'Tuesday', 'Thursday', 'Friday']</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>获取后删除指定位置的元素–使用<code>pop()</code> <blockquote>
<p>①：pop()也可以获取列表中指定位置的元素，但在获取完成后，该元素会被自动删除<br>②：pop()指定了偏移量，它会返回偏移量对应位置的元素；如果不指定，则默认使用-1。pop(0)将返回列表的头元素，而pop()或pop(-1)则会返回列表的尾元素<br>③：当列表中一个元素被删除后，位于它后面的元素会自动往前移动填补空出的位置，且列表长度减1<br>④：若使用append()来添加元素到尾部，并通过pop()从尾部删除元素，就实现<strong>栈</strong>的数据结构（后进先出）<br>⑤：若使用pop(0)来删除元素，就实现<strong>队列</strong>的数据结构（先进先出）  </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">weekdays = [<span class="string">'Monday'</span>, <span class="string">'Tuesday'</span>, <span class="string">'Wednesday'</span>, <span class="string">'Thursday'</span>, <span class="string">'Friday'</span>]</div><div class="line">print(len(weekdays))</div><div class="line">print(weekdays.pop(<span class="number">2</span>))</div><div class="line">print(len(weekdays))</div><div class="line">print(weekdays)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">5</span></div><div class="line"><span class="string">Wednesday</span></div><div class="line"><span class="string">4</span></div><div class="line"><span class="string">['Monday', 'Tuesday', 'Thursday', 'Friday']</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>判断元素是否存在–使用<code>in</code>    <blockquote>
<p>①：同一个值可能出现在列表的多个位置，但只要至少出现一次，in就会返回True。<br>②：如果经常需要判断一个值是否存在于一个列表中，但不关心列表中元素之间的顺序，使用Python集合进行存储和查找会是更好的选择</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">weekdays = [<span class="string">'Monday'</span>, <span class="string">'Tuesday'</span>, <span class="string">'Wednesday'</span>, <span class="string">'Thursday'</span>, <span class="string">'Friday'</span>]</div><div class="line">print(<span class="string">'Tuesday'</span> <span class="keyword">in</span> weekdays)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">True</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>查询特定值的元素位置–使用<code>index()</code>    <blockquote>
<p>index()函数进行查询的是具体元素的偏移量  </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">weekdays = [<span class="string">'Monday'</span>, <span class="string">'Tuesday'</span>, <span class="string">'Wednesday'</span>, <span class="string">'Thursday'</span>, <span class="string">'Friday'</span>]</div><div class="line">print(weekdays.index(<span class="string">'Tuesday'</span>))</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">1</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>记录特定值出现的次数–使用<code>count()</code>  </li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">weekdays = [<span class="string">'Monday'</span>, <span class="string">'Tuesday'</span>, <span class="string">'Wednesday'</span>, <span class="string">'Thursday'</span>, <span class="string">'Friday'</span>]</div><div class="line">print(weekdays.count(<span class="string">'Sunday'</span>))</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">True</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>排列元素– 使用<code>sort()</code>和<code>sorted</code><blockquote>
<p>①：当需要将列表中的元素按值排序，而不是按照偏移量排序时候<br>②：sort()会对原列表进行排序，改变原列表内容<br>③：sorted()则会返回排好序的列表副本，原列表内容不变<br>④：如果列表中的元素都是数字，它们会默认地被排列成从小到大的升序。如果元素都是字符串，则会按照字母表顺序排列。默认的排序是升序的，通过添加参数reverse=True可以改变为降序排列。<br>⑤：当列表中元素不是同一类型，只要它们之间能够自动地互相转换也可排序如整型和浮点型  </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">weekdays = [<span class="string">'Monday'</span>, <span class="string">'Tuesday'</span>, <span class="string">'Wednesday'</span>, <span class="string">'Thursday'</span>, <span class="string">'Friday'</span>]</div><div class="line"></div><div class="line">list_weekdays1 = sorted(weekdays)</div><div class="line">print(weekdays)</div><div class="line">print(list_weekdays1)</div><div class="line"></div><div class="line">weekdays.sort()</div><div class="line">print(weekdays)</div><div class="line"></div><div class="line">numbers = [<span class="number">2</span>, <span class="number">1</span>, <span class="number">4.0</span>, <span class="number">3</span>]</div><div class="line">numbers.sort()</div><div class="line">print(numbers)</div><div class="line">numbers.sort(reverse=<span class="keyword">True</span>)</div><div class="line">print(numbers)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']</span></div><div class="line"><span class="string">['Friday', 'Monday', 'Thursday', 'Tuesday', 'Wednesday']</span></div><div class="line"><span class="string">['Friday', 'Monday', 'Thursday', 'Tuesday', 'Wednesday']</span></div><div class="line"><span class="string">[1, 2, 3, 4.0]</span></div><div class="line"><span class="string">[4.0, 3, 2, 1]</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>获取长度– 使用<code>len()</code> <blockquote>
<p>用于返回列表长度</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">weekdays = [<span class="string">'Monday'</span>, <span class="string">'Tuesday'</span>, <span class="string">'Wednesday'</span>, <span class="string">'Thursday'</span>, <span class="string">'Friday'</span>]</div><div class="line">print(len(weekdays))</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">5</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>赋值– 使用<code>=</code> <blockquote>
<p>将一个列表赋值给了多个变量，改变任意的变量其他变量都会收影响（实际上所有变量都指向的是同一个对象）。</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">list_weekdays1 = [<span class="string">'Monday'</span>, <span class="string">'Tuesday'</span>, <span class="string">'Wednesday'</span>, <span class="string">'Thursday'</span>, <span class="string">'Friday'</span>]</div><div class="line">list_weekdays2 = list_weekdays1</div><div class="line">others = [<span class="string">'Saturday'</span>, <span class="string">'Sunday'</span>]</div><div class="line"></div><div class="line">list_weekdays1.extend(others)</div><div class="line">print(list_weekdays2)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>复制–使用<code>copy()</code>  <blockquote>
<p>①：有3种方法将一个列表的值复制到另一个新的列表中<br>②：复制的列表是自身带有值的新对象，与原始的a所指向的列表对象没有任何关联，改变a不影响b、c和d的复制。  </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</div><div class="line">b = a.copy()</div><div class="line">c = list(a)</div><div class="line">d = a[:]</div></pre></td></tr></table></figure>
<ol>
<li>列表嵌套  </li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">Front_end_language = [<span class="string">'HTML5'</span>, <span class="string">'JavaScript'</span>, <span class="string">'CSS'</span>]</div><div class="line">Back_end_language = [<span class="string">'Java'</span>, <span class="string">'Python'</span>, <span class="string">'PHP'</span>]</div><div class="line">Database_language = [<span class="string">'MySQL'</span>, <span class="string">'NoSQL'</span>, <span class="string">'MangoDB'</span>]</div><div class="line">language = [Front_end_language, Back_end_language, Database_language]</div><div class="line">print(language)</div><div class="line">print(language[<span class="number">1</span>])  <span class="comment"># [1]指向外层列表的第1个元素</span></div><div class="line">print(language[<span class="number">1</span>][<span class="number">2</span>])  <span class="comment"># [2]则指向内层列表的第3个元素</span></div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">[['HTML5', 'JavaScript', 'CSS'], ['Java', 'Python', 'PHP'], ['MySQL', 'NoSQL', 'MangoDB']]</span></div><div class="line"><span class="string">['Java', 'Python', 'PHP']</span></div><div class="line"><span class="string">PHP</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<h3 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h3><h4 id="简介-2"><a href="#简介-2" class="headerlink" title="简介"></a>简介</h4><blockquote>
<p>①：与字符串不同，元组是元素种类不一定相同且元素不变的。一旦元组被定义，将无法再进行增加、删除或修改元素等操作<br>②：元组像是一个常量列表。  </p>
</blockquote>
<h4 id="操作-2"><a href="#操作-2" class="headerlink" title="操作"></a>操作</h4><ol>
<li>创建–使用()<blockquote>
<p>①：创建包含一个或多个元素的元组时，每一个元素后面都需要跟着一个逗号，即使只包含一个元素也不能省略<br>②：如果创建的元组所包含的元素数量超过1，最后一个元素后面的逗号可以省略<br>③：tuple()函数可以用其他类型的数据来转换成元组</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">tule_empty_web = ()</div><div class="line">tule_one_web = (<span class="string">'Google'</span>,)</div><div class="line">tule_more_web = (<span class="string">'Google'</span>, <span class="string">'Baidu'</span>, <span class="string">'Ali'</span>)</div><div class="line">print(tule_empty_web)</div><div class="line">print(tule_one_web)</div><div class="line">print(tule_more_web)</div><div class="line"></div><div class="line">list_more_web = [<span class="string">'Google'</span>, <span class="string">'Baidu'</span>, <span class="string">'Ali'</span>]</div><div class="line">print(list_more_web)</div><div class="line">print(tuple(list_more_web))</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">()</span></div><div class="line"><span class="string">('Google',)</span></div><div class="line"><span class="string">('Google', 'Baidu', 'Ali')</span></div><div class="line"><span class="string">['Google', 'Baidu', 'Ali']</span></div><div class="line"><span class="string">('Google', 'Baidu', 'Ali')</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>赋值/元组解包  <blockquote>
<p>①：可以将元组中的元素同时赋值给多个变量–称为元组解包<br>②：可以利用元组在一条语句中对多个变量的值进行交换，而不需要借助临时变量</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">more_tule = (<span class="string">'Google'</span>, <span class="string">'Baidu'</span>, <span class="string">'Ali'</span>)</div><div class="line">a, b, c = more_tule</div><div class="line">print(c)</div><div class="line"></div><div class="line">first_language = <span class="string">'Cantones'</span></div><div class="line">second_language = <span class="string">'English'</span></div><div class="line">first_language, second_language = second_language, first_language</div><div class="line">print(first_language)</div><div class="line">print(second_language)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">Ali</span></div><div class="line"><span class="string">English</span></div><div class="line"><span class="string">Cantones</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<h4 id="与列表优缺点比较"><a href="#与列表优缺点比较" class="headerlink" title="与列表优缺点比较"></a>与列表优缺点比较</h4><blockquote>
<p>①：元组一旦创建便无法修改，没有<code>append()</code>、<code>insert()</code>等方法。实际编程中，更多场合用到的是列表和字典<br>②：  </p>
<blockquote>
<p>• 元组占用的空间较小<br>• 可将元组用作字典的键<br>• 命名元组可以作为对象的替代<br>• 函数的参数是以元组形式传递的  </p>
</blockquote>
</blockquote>
<h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3><h4 id="简介-3"><a href="#简介-3" class="headerlink" title="简介"></a>简介</h4><blockquote>
<p>①：字典与列表类似，但元素不是通过偏移量访问，而是通过每个元素对应的唯一键访问<br>②：字典是可变的，因此可以增加、删除或修改其中的键值对。<br>③：键通常是字符串，但也可以是Python中其他任意的不可变类型：布尔型、整型、浮点型、元组。<br>④：在其他语言中，字典可能会被称作关系型数组、哈希表或哈希图。在Python中，字典（dictionary）还经常会被简写成dict</p>
</blockquote>
<h4 id="操作-3"><a href="#操作-3" class="headerlink" title="操作"></a>操作</h4><ol>
<li>创建–使用<code>{}</code><blockquote>
<p>①：大括号（{}）将一系列以逗号隔开的键值对（key:value）包裹起来即可进行字典的创建<br>②：Python允许在列表、元组或字典的最后一个元素后面添加逗号，这不会产生任何问题。此外，在括号之间输入键值对来创建字典时并不强制缩进</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">dirt_empty = &#123;&#125;</div><div class="line">dirt_bierce = &#123;</div><div class="line"><span class="string">"day"</span>: <span class="string">"A period of twenty-four hours, mostly misspent"</span>,</div><div class="line"><span class="string">"positive"</span>: <span class="string">"Mistaken at the top of one's voice"</span>,</div><div class="line"><span class="string">"misfortune"</span>: <span class="string">"The kind of fortune that never misses"</span>,</div><div class="line">&#125;</div><div class="line">print(dirt_empty)</div><div class="line">print(dirt_bierce)  <span class="comment"># 打印所有键值对</span></div><div class="line">print(<span class="string">','</span>.join(dirt_bierce))  <span class="comment"># 打印所有的键</span></div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">&#123;&#125;</span></div><div class="line"><span class="string">&#123;'day': 'A period of twenty-four hours, mostly misspent', 'positive': "Mistaken at the top of one's voice", 'misfortune': 'The kind of fortune that never misses'&#125;</span></div><div class="line"><span class="string">day,positive,misfortune</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>其他数据类型转换为字典– 使用<code>dict()</code>  <blockquote>
<p>①：dict()可将包含双值子序列（<strong>列表[]，元组()，字典{}</strong>）的序列转换成字典<br>②：字典中元素的顺序是无关紧要的，实际存储顺序可能取决于添加元素的顺序。  </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 包含双值元组的元组转换成字典</span></div><div class="line">lol = ((<span class="string">'Vito'</span>, <span class="number">25</span>), (<span class="string">'Emily'</span>, <span class="number">19</span>), (<span class="string">'Tony'</span>, <span class="number">24</span>))</div><div class="line">print(lol)</div><div class="line">print(dict(lol))</div><div class="line"></div><div class="line"><span class="comment"># 包含双值元组的列表转换成字典</span></div><div class="line">lot = [(<span class="string">'Vito'</span>, <span class="number">25</span>), (<span class="string">'Emily'</span>, <span class="number">19</span>), (<span class="string">'Tony'</span>, <span class="number">24</span>)]</div><div class="line">print(lot)</div><div class="line">print(dict(lot))</div><div class="line"></div><div class="line"><span class="comment"># 包含双值列表的元组转换成字典</span></div><div class="line">tol = ([<span class="string">'Vito'</span>, <span class="number">25</span>], [<span class="string">'Emily'</span>, <span class="number">19</span>], [<span class="string">'Tony'</span>, <span class="number">24</span>])</div><div class="line">print(tol)</div><div class="line">print(dict(tol))</div><div class="line"></div><div class="line"><span class="comment"># 包含双字符的字符串组成的列表转换成字典</span></div><div class="line">los = [<span class="string">'Vi'</span>, <span class="string">'Em'</span>, <span class="string">'To'</span>]</div><div class="line">print(los)</div><div class="line">print(dict(los))</div><div class="line"></div><div class="line"><span class="comment"># 包含双字符的字符串组成的元组转换成字典</span></div><div class="line">tos = (<span class="string">'Vi'</span>, <span class="string">'Em'</span>, <span class="string">'To'</span>)</div><div class="line">print(tos)</div><div class="line">print(dict(tos))</div><div class="line"></div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">(('Vito', 25), ('Emily', 19), ('Tony', 24))</span></div><div class="line"><span class="string">&#123;'Vito': 25, 'Emily': 19, 'Tony': 24&#125;</span></div><div class="line"><span class="string">[('Vito', 25), ('Emily', 19), ('Tony', 24)]</span></div><div class="line"><span class="string">&#123;'Vito': 25, 'Emily': 19, 'Tony': 24&#125;</span></div><div class="line"><span class="string">(['Vito', 25], ['Emily', 19], ['Tony', 24])</span></div><div class="line"><span class="string">&#123;'Vito': 25, 'Emily': 19, 'Tony': 24&#125;</span></div><div class="line"><span class="string">['Vi', 'Em', 'To']</span></div><div class="line"><span class="string">&#123;'V': 'i', 'E': 'm', 'T': 'o'&#125;</span></div><div class="line"><span class="string">('Vi', 'Em', 'To')</span></div><div class="line"><span class="string">&#123;'V': 'i', 'E': 'm', 'T': 'o'&#125;</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>获取所有键–使用<code>[key]</code>  <blockquote>
<p>①：Python 2里，keys()会返回一个列表，而在Python 3中则会返回dict_keys()，它是键的迭代形式。这种返回形式对于大型的字典非常有用，因为它不需要时间和空间来创建返回的列表<br>②：Python 3中需调用list()将dict_keys转换为列表类型。  </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">names = &#123;</div><div class="line">    <span class="string">'海球'</span>: <span class="string">'黄'</span>,</div><div class="line">    <span class="string">'梓灵'</span>: <span class="string">'梁'</span>,</div><div class="line">    <span class="string">'卉'</span>: <span class="string">'陈'</span>,</div><div class="line">    <span class="string">'嘉城'</span>: <span class="string">'李'</span>,</div><div class="line">    <span class="string">'泽钜'</span>: <span class="string">'李'</span>, &#125;</div><div class="line"></div><div class="line">print(names.keys())</div><div class="line">print(list(names.keys()))</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">dict_keys(['海球', '梓灵', '卉', '嘉城', '泽钜'])</span></div><div class="line"><span class="string">['海球', '梓灵', '卉', '嘉城', '泽钜']</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>获取所有值– 使用<code>values()</code> </li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">names = &#123;</div><div class="line">    <span class="string">'海球'</span>: <span class="string">'黄'</span>,</div><div class="line">    <span class="string">'梓灵'</span>: <span class="string">'梁'</span>,</div><div class="line">    <span class="string">'卉'</span>: <span class="string">'陈'</span>,</div><div class="line">    <span class="string">'嘉城'</span>: <span class="string">'李'</span>,</div><div class="line">    <span class="string">'泽钜'</span>: <span class="string">'李'</span>, &#125;</div><div class="line"></div><div class="line">print(names.values())</div><div class="line">print(list(names.values()))</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">dict_values(['黄', '梁', '陈', '李', '李'])</span></div><div class="line"><span class="string">['黄', '梁', '陈', '李', '李']</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>获取所有键值对– 使用<code>items()</code>    <blockquote>
<p>每一个键值对以元组的形式返回</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">names = &#123;</div><div class="line">    <span class="string">'海球'</span>: <span class="string">'黄'</span>,</div><div class="line">    <span class="string">'梓灵'</span>: <span class="string">'梁'</span>,</div><div class="line">    <span class="string">'卉'</span>: <span class="string">'陈'</span>,</div><div class="line">    <span class="string">'嘉城'</span>: <span class="string">'李'</span>,</div><div class="line">    <span class="string">'泽钜'</span>: <span class="string">'李'</span>, &#125;</div><div class="line"></div><div class="line">print(names.items())</div><div class="line">print(list(names.items()))</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">dict_items([('海球', '黄'), ('梓灵', '梁'), ('卉', '陈'), ('嘉城', '李'), ('泽钜', '李')])</span></div><div class="line"><span class="string">[('海球', '黄'), ('梓灵', '梁'), ('卉', '陈'), ('嘉城', '李'), ('泽钜', '李')]</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>添加或修改元素–使用<code>[key]</code>   &gt;①：指定该元素的键并赋予相应的值即可。如果该元素的键已经存在于字典中，那么该键对应的旧值会被新值取代。如果该元素的键并未在字典中出现，则会被加入字典。 </li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">names = &#123;</div><div class="line">    <span class="string">'海球'</span>: <span class="string">'黄'</span>,</div><div class="line">    <span class="string">'梓灵'</span>: <span class="string">'亮'</span>,</div><div class="line">    <span class="string">'悦'</span>: <span class="string">'刘'</span>&#125;</div><div class="line"></div><div class="line">names[<span class="string">'卉'</span>] = <span class="string">'陈'</span>  <span class="comment"># 添加元素</span></div><div class="line">print(names)</div><div class="line">names[<span class="string">'梓灵'</span>] = <span class="string">'梁'</span>  <span class="comment"># 修改元素</span></div><div class="line">print(names)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">&#123;'海球': '黄', '梓灵': '亮', '悦': '刘', '卉': '陈'&#125;</span></div><div class="line"><span class="string">&#123;'海球': '黄', '梓灵': '梁', '悦': '刘', '卉': '陈'&#125;</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>删除具有指定键的元素– 使用<code>del</code>    </li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">names = &#123;</div><div class="line">    <span class="string">'海球'</span>: <span class="string">'黄'</span>,</div><div class="line">    <span class="string">'梓灵'</span>: <span class="string">'梁'</span>,</div><div class="line">    <span class="string">'卉'</span>: <span class="string">'陈'</span>,</div><div class="line">    <span class="string">'嘉城'</span>: <span class="string">'李'</span>,</div><div class="line">    <span class="string">'泽钜'</span>: <span class="string">'李'</span>, &#125;</div><div class="line"></div><div class="line"><span class="keyword">del</span> names[<span class="string">'梓灵'</span>]</div><div class="line"><span class="keyword">del</span> names[<span class="string">'卉'</span>]</div><div class="line">print(names)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">&#123;'海球': '黄', '嘉城': '李', '泽钜': '李'&#125;</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li><p>删除所有元素–使用<code>clear()</code>  </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">names = &#123;</div><div class="line">    <span class="string">'海球'</span>: <span class="string">'黄'</span>,</div><div class="line">    <span class="string">'梓灵'</span>: <span class="string">'梁'</span>,</div><div class="line">    <span class="string">'卉'</span>: <span class="string">'陈'</span>,</div><div class="line">    <span class="string">'嘉城'</span>: <span class="string">'李'</span>,</div><div class="line">    <span class="string">'泽钜'</span>: <span class="string">'李'</span>, &#125;</div><div class="line"></div><div class="line">names.clear()</div><div class="line">print(names)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">&#123;&#125;</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
</li>
<li><p>赋值– 使用<code>=</code>  </p>
<blockquote>
<p>与列表一样，对字典内容进行的修改会反映到所有与之相关联的变量名上，即原字典内容会改变 </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">original_signals = &#123;</div><div class="line">    <span class="string">'绿色'</span>: <span class="string">'走'</span>,</div><div class="line">    <span class="string">'黄色'</span>: <span class="string">'快走'</span>,</div><div class="line">    <span class="string">'红色'</span>: <span class="string">'停'</span>&#125;</div><div class="line"></div><div class="line">new_signals = original_signals</div><div class="line">new_signals[<span class="string">'蓝色'</span>] = <span class="string">'开玩笑'</span></div><div class="line"></div><div class="line">print(original_signals)</div><div class="line">print(new_signals)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">&#123;'绿色': '走', '黄色': '快走', '红色': '停', '蓝色': '开玩笑'&#125;</span></div><div class="line"><span class="string">&#123;'绿色': '走', '黄色': '快走', '红色': '停', '蓝色': '开玩笑'&#125;</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>复制–使用<code>copy()</code>    <blockquote>
<p>将字典复制到一个新的字典，原字典内容不会随着新字典的改变而改变</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">original_signals = &#123;</div><div class="line">    <span class="string">'绿色'</span>: <span class="string">'走'</span>,</div><div class="line">    <span class="string">'黄色'</span>: <span class="string">'快走'</span>,</div><div class="line">    <span class="string">'红色'</span>: <span class="string">'停'</span>&#125;</div><div class="line"></div><div class="line">new_signals = original_signals.copy()</div><div class="line">new_signals[<span class="string">'蓝色'</span>] = <span class="string">'开玩笑'</span></div><div class="line"></div><div class="line">print(original_signals)</div><div class="line">print(new_signals)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">&#123;'绿色': '走', '黄色': '快走', '红色': '停'&#125;</span></div><div class="line"><span class="string">&#123;'绿色': '走', '黄色': '快走', '红色': '停', '蓝色': '开玩笑'&#125;</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>合并–使用<code>update()</code>    <blockquote>
<p>①：update()可以将一个字典的键值对复制到另一个字典中<br>②：如果待添加的字典与待扩充的字典包含同样的键，则新归入字典的值会取代原有的值      </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">names = &#123;</div><div class="line">    <span class="string">'海球'</span>: <span class="string">'黄'</span>,</div><div class="line">    <span class="string">'梓灵'</span>: <span class="string">'亮'</span>,</div><div class="line">    <span class="string">'卉'</span>: <span class="string">'陈'</span>, &#125;</div><div class="line"></div><div class="line">others = &#123;</div><div class="line">    <span class="string">'嘉城'</span>: <span class="string">'李'</span>,</div><div class="line">    <span class="string">'泽钜'</span>: <span class="string">'李'</span>,</div><div class="line">    <span class="string">'梓灵'</span>: <span class="string">'梁'</span>,</div><div class="line">&#125;</div><div class="line"></div><div class="line">names.update(others)</div><div class="line">print(names)</div></pre></td></tr></table></figure>
<ol>
<li>判断元素是否存在– 使用<code>in</code>    <blockquote>
<p>判断某一个键是否存在于一个字典中 </p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">names = &#123;</div><div class="line">    <span class="string">'海球'</span>: <span class="string">'黄'</span>,</div><div class="line">    <span class="string">'梓灵'</span>: <span class="string">'梁'</span>,</div><div class="line">    <span class="string">'卉'</span>: <span class="string">'陈'</span>,</div><div class="line">    <span class="string">'嘉城'</span>: <span class="string">'李'</span>,</div><div class="line">    <span class="string">'泽钜'</span>: <span class="string">'李'</span>, &#125;</div><div class="line"></div><div class="line">print(<span class="string">'海球'</span> <span class="keyword">in</span> names)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">True</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h3><h4 id="简介-4"><a href="#简介-4" class="headerlink" title="简介"></a>简介</h4><blockquote>
<p>①：可以比喻为舍弃了值仅剩下键的字典。<br>②: 与字典的键一样，键与键之间也不允许重复,且元素是无序的。<br>③：若要判断某一个元素是否存在而不关心其他的，集合是个非常好的选择；如果需要为键附加其他信息的话，建议使用字典。<br>④：可以利用已有列表、字符串、元组或字典的内容来创建集合，其中重复的值会被丢弃。  </p>
</blockquote>
<h4 id="操作-4"><a href="#操作-4" class="headerlink" title="操作"></a>操作</h4><ol>
<li>创建–使用<code>set()</code>  <blockquote>
<p>①：对于空集合，只能使用set()函数创建<br>②：对于非空集合，使用set()函数或者用大括号将一系列以逗号隔开的值包裹起来创建<br>③：由于 [] 能创建一个空列表，你可能期望{}也能创建空集。但事实上，{}会创建一个空字典，这也是为什么交互式解释器把空集输出为set()而不是{}。为何如此？没有什么特殊原因，仅仅是因为字典出现的比较早并抢先占据了花括号。</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">empty_set1 = set()</div><div class="line">print(empty_set1)</div><div class="line"></div><div class="line">empty_set2 = &#123;&#125; <span class="comment"># 创建的是一个字典</span></div><div class="line">print(empty_set2)</div><div class="line">print(type(empty_set2))</div><div class="line"></div><div class="line">even_numbers = &#123;<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>&#125;</div><div class="line">odd_numbers = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>&#125;</div><div class="line">print(even_numbers)</div><div class="line">print(odd_numbers)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">set()</span></div><div class="line"><span class="string">&#123;&#125;</span></div><div class="line"><span class="string">&lt;class 'dict'&gt;</span></div><div class="line"><span class="string">&#123;0, 2, 4, 6, 8&#125;</span></div><div class="line"><span class="string">&#123;1, 3, 5, 7, 9&#125;</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>其他类型转换为集合–使用<code>set()</code><br>①：转换一个包含重复字母的字符串–筛选字符串中的重复字母</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">color = set(<span class="string">'yellow'</span>)</div><div class="line">print(color)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">&#123;'w', 'e', 'l', 'o', 'y'&#125;</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<p>②：列表转换成集合–筛选列表中的重复元素</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">color = set([<span class="string">'yellow'</span>, <span class="string">'red'</span>, <span class="string">'yellow'</span>, <span class="string">'blue'</span>, <span class="string">'green'</span>])</div><div class="line">print(color)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">&#123;'green', 'blue', 'red', 'yellow'&#125;</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<p>③：元组转换成集合</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">color = set((<span class="string">'yellow'</span>, <span class="string">'red'</span>, <span class="string">'yellow'</span>, <span class="string">'blue'</span>, <span class="string">'green'</span>))</div><div class="line">print(color)</div><div class="line"></div><div class="line"><span class="string">"""python</span></div><div class="line"><span class="string">&#123;'green', 'yellow', 'red', 'blue'&#125;</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<p>④：字典转换成集合</p>
<blockquote>
<p>字典作为参数传入set() 函数时只有键会被使用</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">fruits = set(&#123;</div><div class="line">    <span class="string">'apple'</span>: <span class="string">'red'</span>,</div><div class="line">    <span class="string">'banana'</span>: <span class="string">'yellow'</span>,</div><div class="line">    <span class="string">'orange'</span>: <span class="string">'orange'</span>,</div><div class="line">    <span class="string">'cherry'</span>: <span class="string">'red'</span>&#125;)</div><div class="line">print(fruits)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">&#123;'cherry', 'orange', 'banana', 'apple'&#125;</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>测试值是否存在–使用<code>in</code></li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">drinks = &#123;<span class="string">'马丁尼'</span>: (<span class="string">'vodka'</span>, <span class="string">'vermouth'</span>),</div><div class="line">          <span class="string">'寿百年(黑俄罗斯)'</span>: (<span class="string">'vodka'</span>, <span class="string">'kahlua'</span>),</div><div class="line">          <span class="string">'白俄罗斯'</span>: (<span class="string">'cream'</span>, <span class="string">'kahlua'</span>, <span class="string">'vodka'</span>),</div><div class="line">          <span class="string">'曼哈顿'</span>: (<span class="string">'rye'</span>, <span class="string">'vermouth'</span>, <span class="string">'bitters'</span>),</div><div class="line">          <span class="string">'螺丝起子'</span>: (<span class="string">'orange juice'</span>, <span class="string">'vodka'</span>)&#125;</div><div class="line"></div><div class="line">print(<span class="string">'列出含有伏特加的饮料:'</span>)</div><div class="line"><span class="keyword">for</span> name1, contents <span class="keyword">in</span> drinks.items():</div><div class="line">    <span class="keyword">if</span> <span class="string">'vodka'</span> <span class="keyword">in</span> contents:</div><div class="line">        print(name1)</div><div class="line"></div><div class="line">print(<span class="string">'-'</span>*<span class="number">20</span>)</div><div class="line"></div><div class="line">print(<span class="string">'列出含有伏特加的饮料但不含乳糖或苦艾的饮料--方法1：'</span>)</div><div class="line"><span class="keyword">for</span> name2, contents <span class="keyword">in</span> drinks.items():</div><div class="line">    <span class="keyword">if</span> <span class="string">'vodka'</span> <span class="keyword">in</span> contents <span class="keyword">and</span> <span class="keyword">not</span> (<span class="string">'cream'</span> <span class="keyword">in</span> contents <span class="keyword">or</span> <span class="string">'vermouth'</span> <span class="keyword">in</span> contents):</div><div class="line">        print(name2)</div><div class="line">        </div><div class="line">print(<span class="string">'列出含有伏特加的饮料但不含乳糖或苦艾的饮料--方法2：'</span>)       </div><div class="line"><span class="keyword">for</span> name3, contents <span class="keyword">in</span> drinks.items():</div><div class="line">    <span class="keyword">if</span> <span class="string">'vodka'</span> <span class="keyword">in</span> contents <span class="keyword">and</span> <span class="keyword">not</span> contents &amp; &#123;<span class="string">'vermouth'</span>, <span class="string">'orange juice'</span>&#125;:</div><div class="line">        print(name3)</div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">列出含有伏特加的饮料:</span></div><div class="line"><span class="string">马丁尼</span></div><div class="line"><span class="string">寿百年(黑俄罗斯)</span></div><div class="line"><span class="string">白俄罗斯</span></div><div class="line"><span class="string">螺丝起子</span></div><div class="line"><span class="string">--------------------</span></div><div class="line"><span class="string">列出含有伏特加的饮料但不含乳糖或苦艾的饮料--方法1：</span></div><div class="line"><span class="string">寿百年(黑俄罗斯)</span></div><div class="line"><span class="string">螺丝起子</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">列出含有伏特加的饮料但不含乳糖或苦艾的饮料--方法2：</span></div><div class="line"><span class="string">寿百年(黑俄罗斯)</span></div><div class="line"><span class="string">螺丝起子</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<ol>
<li>合并及运算<br>①：交并补集运算的元素类型必须是字典或集合<code>{}</code>才能操作<br>②：号 &amp; 或者集合函数intersection()获取集合的交集（两集合共有<br>元素）。&amp;运算符的结果是一个集合，它包含所有同时出现在你比较的两个清单中的元素。如果contents里面不包含任何一种指定成分，则&amp;会返回一个空集，相当于False。<br>③：使用|或者union()函数来获取集合的并集（至少出现在一个集合中的元素）：。<br>④：使用字符 - 或者 difference() 可以获得两个集合的差集（出现在第一个集合但不出现在第<br>二个集合）<br>⑤：使用^或者symmetric_difference()可以获得两个集合的异或集（仅在两个集合中出现一次）</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">drinks = &#123;<span class="string">'马丁尼'</span>: &#123;<span class="string">'vodka'</span>, <span class="string">'vermouth'</span>&#125;,</div><div class="line">          <span class="string">'寿百年(黑俄罗斯)'</span>: &#123;<span class="string">'vodka'</span>, <span class="string">'kahlua'</span>, <span class="string">'ice'</span>&#125;,</div><div class="line">          <span class="string">'白俄罗斯'</span>: &#123;<span class="string">'cream'</span>, <span class="string">'kahlua'</span>, <span class="string">'vodka'</span>&#125;,</div><div class="line">          <span class="string">'曼哈顿'</span>: &#123;<span class="string">'rye'</span>, <span class="string">'vermouth'</span>, <span class="string">'bitters'</span>&#125;,</div><div class="line">          <span class="string">'螺丝起子'</span>: &#123;<span class="string">'orange juice'</span>, <span class="string">'vodka'</span>&#125;&#125;</div><div class="line"></div><div class="line"><span class="comment"># 将这两种饮料的原料都存储到变量</span></div><div class="line">bruss = drinks[<span class="string">'寿百年(黑俄罗斯)'</span>]</div><div class="line">wruss = drinks[<span class="string">'白俄罗斯'</span>]</div><div class="line"></div><div class="line"><span class="comment"># 交集处理</span></div><div class="line">print(<span class="string">'制作黑俄罗斯和白俄罗斯共同需要的原料--方法1:'</span>, bruss &amp; wruss)</div><div class="line">print(<span class="string">'制作黑俄罗斯和白俄罗斯共同需要的原料--方法2:'</span>, bruss.intersection(wruss))</div><div class="line"><span class="comment"># 并集处理</span></div><div class="line">print(<span class="string">'制作黑俄罗斯和白俄罗斯所有的原料--方法1:'</span>, bruss | wruss)</div><div class="line">print(<span class="string">'制作黑俄罗斯和白俄罗斯所有的原料--方法2:'</span>, bruss.union(wruss))</div><div class="line"><span class="comment"># 差集处理</span></div><div class="line">print(<span class="string">'制作黑俄罗斯特有的原料--方法1:'</span>, bruss - wruss)</div><div class="line">print(<span class="string">'制作黑俄罗斯特有的原料--方法2:'</span>, bruss.difference(wruss))</div><div class="line">print(<span class="string">'制作白俄罗斯特有的原料--方法1:'</span>, wruss - bruss)</div><div class="line">print(<span class="string">'制作白俄罗斯特有的原料--方法2:'</span>, wruss.difference(bruss))</div><div class="line"><span class="comment"># 异或处理</span></div><div class="line">print(<span class="string">'制作黑俄罗斯和白俄罗斯特有的原料--方法1:'</span>, bruss ^ wruss)</div><div class="line">print(<span class="string">'制作黑俄罗斯和白俄罗斯特有的原料--方法2:'</span>, bruss.symmetric_difference(wruss))</div><div class="line"></div><div class="line">print(<span class="string">'- '</span>*<span class="number">20</span>)</div><div class="line"></div><div class="line"><span class="comment"># 并集处理</span></div><div class="line">print(<span class="string">'含有orange juice或含有vermouth的饮料：'</span>)</div><div class="line"><span class="keyword">for</span> name1, contents <span class="keyword">in</span> drinks.items():</div><div class="line">    <span class="keyword">if</span> contents &amp; &#123;<span class="string">'vermouth'</span>, <span class="string">'orange juice'</span>&#125;:</div><div class="line">        print(name1)</div><div class="line"></div><div class="line">print(<span class="string">'- '</span>*<span class="number">20</span>)</div><div class="line"></div><div class="line"><span class="comment"># 交集处理</span></div><div class="line">print(<span class="string">'含有vodka且含有kahlua的饮料：'</span>)</div><div class="line"><span class="keyword">for</span> name2, contents <span class="keyword">in</span> drinks.items():</div><div class="line">    <span class="keyword">if</span> <span class="string">'vodka'</span> <span class="keyword">in</span> contents <span class="keyword">and</span> <span class="string">'kahlua'</span> <span class="keyword">in</span> contents:</div><div class="line">        print(name2)</div><div class="line"></div><div class="line"></div><div class="line"><span class="string">"""输出</span></div><div class="line"><span class="string">制作黑俄罗斯和白俄罗斯共同需要的原料--方法1: &#123;'vodka', 'kahlua'&#125;</span></div><div class="line"><span class="string">制作黑俄罗斯和白俄罗斯共同需要的原料--方法2: &#123;'vodka', 'kahlua'&#125;</span></div><div class="line"><span class="string">制作黑俄罗斯和白俄罗斯所有的原料--方法1: &#123;'cream', 'ice', 'vodka', 'kahlua'&#125;</span></div><div class="line"><span class="string">制作黑俄罗斯和白俄罗斯所有的原料--方法2: &#123;'cream', 'ice', 'vodka', 'kahlua'&#125;</span></div><div class="line"><span class="string">制作黑俄罗斯特有的原料--方法1: &#123;'ice'&#125;</span></div><div class="line"><span class="string">制作黑俄罗斯特有的原料--方法2: &#123;'ice'&#125;</span></div><div class="line"><span class="string">制作白俄罗斯特有的原料--方法1: &#123;'cream'&#125;</span></div><div class="line"><span class="string">制作白俄罗斯特有的原料--方法2: &#123;'cream'&#125;</span></div><div class="line"><span class="string">制作黑俄罗斯和白俄罗斯特有的原料--方法1: &#123;'cream', 'ice'&#125;</span></div><div class="line"><span class="string">制作黑俄罗斯和白俄罗斯特有的原料--方法2: &#123;'cream', 'ice'&#125;</span></div><div class="line"><span class="string">- - - - - - - - - - - - - - - - - - - - </span></div><div class="line"><span class="string">含有orange juice或含有vermouth的饮料：</span></div><div class="line"><span class="string">马丁尼</span></div><div class="line"><span class="string">曼哈顿</span></div><div class="line"><span class="string">螺丝起子</span></div><div class="line"><span class="string">- - - - - - - - - - - - - - - - - - - - </span></div><div class="line"><span class="string">含有vodka且含有kahlua的饮料：</span></div><div class="line"><span class="string">寿百年(黑俄罗斯)</span></div><div class="line"><span class="string">白俄罗斯</span></div><div class="line"><span class="string">"""</span></div></pre></td></tr></table></figure>
<h3 id="4种数据类型的比较总结"><a href="#4种数据类型的比较总结" class="headerlink" title="4种数据类型的比较总结"></a>4种数据类型的比较总结</h3><ol>
<li><p>列表<br>①：<code>[]</code>or<code>list()</code><br>②：<strong>概念</strong>：存储不同数据类型的可变容器。列表则永远都不能当做字典键使用，也不能作为集合中的元素。<br>③：<strong>特点</strong>：元组中的元素可以是不同数据类型。列表属于可变（immutable）序列，创建后允许对元素进行增删改查。  </p>
</li>
<li><p>元组<br>①：<code>()</code><br>②：<strong>概念</strong>：存储不同数据类型的不可变容器。可以认为元组是轻量级的列表。既可用作字典的键，也可以作为集合的元素。<br>③：<strong>特点</strong>：元组中的元素可以是不同数据类型。元组属于不可变（immutable）序列，一旦创建则不允许修改元组中元素的值也无法为元组增加或删除元素。元组访问速度比列表更快。如果定义了一系列常量值，主要用途仅是对它们进行遍历或其他类似用途，而不需要对其元素进行任何修改，那么一般建议使用元组而不用列表。    </p>
</li>
<li><p>字典<br>①：<code>{}</code><br>②：<strong>概念</strong>：存储不同数据类型键值对的可变容器。<br>③：<strong>特点</strong>：值可以取任何数据类型，但键必须是不可变，且类型是<strong><em>字符串，数字或元组</em></strong>。  </p>
</li>
<li><p>集合<br>①：<code>set()</code><br>②：<strong>概念</strong>：存储不同数据类型键的可变容器。可以理解像舍弃了值仅剩下键的字典。<br>③: <strong>特点</strong>：仅关心某键值对的键是否存在而不关心其他的则使用集合；如果需要为键附加其他信息的话则使用字典。  </p>
</li>
</ol>
<h2 id="代码结构"><a href="#代码结构" class="headerlink" title="代码结构"></a>代码结构</h2><blockquote>
<p>学习数据结构上实现比较、选择和重复操作。通过函数来组织代码，用异常来处理错误。</p>
</blockquote>
<h2 id="盒子：模块、包和程序"><a href="#盒子：模块、包和程序" class="headerlink" title="盒子：模块、包和程序"></a>盒子：模块、包和程序</h2><blockquote>
<p>学习使用模块、包和程序组织代码，划分代码和数据、数据的输入输出、处理选项、使用标准库并了解标准库的内部实现。</p>
</blockquote>
<h2 id="数据的处理"><a href="#数据的处理" class="headerlink" title="数据的处理"></a>数据的处理</h2><blockquote>
<p>学到如何处理文本和二进制数据以及Unicode字符和I/O。</p>
<h3 id="文本字符串"><a href="#文本字符串" class="headerlink" title="文本字符串"></a>文本字符串</h3></blockquote>
<h3 id="二进制数据"><a href="#二进制数据" class="headerlink" title="二进制数据"></a>二进制数据</h3><h1 id="Pythonの高级"><a href="#Pythonの高级" class="headerlink" title="Pythonの高级"></a>Pythonの高级</h1><h2 id="数据的归宿"><a href="#数据的归宿" class="headerlink" title="数据的归宿"></a>数据的归宿</h2><blockquote>
<p>学习使用普通文件、目录和文件系统，学习如何处理常用文件格式，如CSV、JSON和XML,了解如何从关系型数据库和最新的NoSQL数据库中存取数据</p>
</blockquote>
<h2 id="剖析Web"><a href="#剖析Web" class="headerlink" title="剖析Web"></a>剖析Web</h2><blockquote>
<p>学习Web客户端、服务器、数据抓取、API和框架，编写一个带请求参数处理和模板的真实网站</p>
</blockquote>
<h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><blockquote>
<p>学习管理系统程序、进程和线程，处理日期和时间，实现系统管理任务自动化。</p>
</blockquote>
<h2 id="并发和网络"><a href="#并发和网络" class="headerlink" title="并发和网络"></a>并发和网络</h2><blockquote>
<p>学习网络相关内容：服务、协议和API。如底层TCP套接字、消息库以及队列系统、云端部署</p>
</blockquote>
<h1 id="Pythonの实践"><a href="#Pythonの实践" class="headerlink" title="Pythonの实践"></a>Pythonの实践</h1><h2 id="附录A：在艺术领域的应用"><a href="#附录A：在艺术领域的应用" class="headerlink" title="附录A：在艺术领域的应用"></a>附录A：在艺术领域的应用</h2><blockquote>
<p>图像、音乐、动画和游戏</p>
</blockquote>
<h2 id="附录B-在商业领域也有应用"><a href="#附录B-在商业领域也有应用" class="headerlink" title="附录B: 在商业领域也有应用"></a>附录B: 在商业领域也有应用</h2><blockquote>
<p>数据可视化（图表、图形和地图）、安全和管理。</p>
</blockquote>
<h2 id="附录C-在科学领域应用"><a href="#附录C-在科学领域应用" class="headerlink" title="附录C: 在科学领域应用"></a>附录C: 在科学领域应用</h2><blockquote>
<p>数学和统计学、物理科学、生物科学以及医学。<br>    s </p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ovot91g2e.bkt.clouddn.com/Python%20%E8%AF%AD%E8%A8%80%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8..png&quot; alt=&quot;&quot;&gt;&lt;br&gt;《Python 语言及其应用》 读后感&amp;amp;笔记&lt;br&gt;
    
    </summary>
    
      <category term="工作" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="互联网技能" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/%E4%BA%92%E8%81%94%E7%BD%91%E6%8A%80%E8%83%BD/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>健身的训练方法</title>
    <link href="http://yoursite.com/2017/08/28/%E5%81%A5%E8%BA%AB%E7%9A%84%E8%AE%AD%E7%BB%83%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2017/08/28/健身的训练方法/</id>
    <published>2017-08-28T15:08:05.000Z</published>
    <updated>2017-08-30T17:07:46.000Z</updated>
    
    <content type="html"><![CDATA[
<p>总结目前自己健身的训练项目和注意细节<br></p>
<h1 id="体能训练"><a href="#体能训练" class="headerlink" title="体能训练"></a>体能训练</h1><h2 id="力量"><a href="#力量" class="headerlink" title="力量"></a>力量</h2><h3 id="腿"><a href="#腿" class="headerlink" title="腿"></a>腿</h3><ol>
<li><p><strong>杠铃负重深蹲</strong><br>5组*8-12次<br><img src="http://img.mp.itc.cn/upload/20170801/d1e845949a7c4e27a2aa8241287f8cf1.jpg" alt=""></p>
</li>
<li><p><strong>杠铃直腿硬拉</strong><br>4-6组*8-12次<br><img src="http://img.mp.itc.cn/upload/20170801/96331697a25f4b3db2284c6c4433346c.jpg" alt=""></p>
</li>
<li><p><strong>器械坐姿腿举</strong><br>4-6组*8-12<br><img src="http://img.mp.itc.cn/upload/20170801/5b01a5d194bf4ce9a5dd32eec99e3162.jpg" alt="">  </p>
</li>
<li><p><strong>杠铃负重箭步蹲</strong><br>3-5组*8-12次<br><img src="http://img.mp.itc.cn/upload/20170801/33fca450cef4468eae117a595e537a7d.jpg" alt=""></p>
</li>
<li><p><strong>坐姿器械举腿</strong><br>4-6组*8-12次<br><img src="http://img.mp.itc.cn/upload/20170801/82537eca2d654c98a1f236c3daa73f48.jpg" alt=""></p>
</li>
</ol>
<h3 id="背"><a href="#背" class="headerlink" title="背"></a>背</h3><ol>
<li><p><strong>正手宽距引体向上</strong><br>3组*12，10，8个<br><img src="http://mmbiz.qpic.cn/mmbiz_gif/5xVQhhicpMYhrtbcTJtZa8J59fUUF8YziaegtxxDH7TSdoibdicpFdyGhdfZCnmNDVWF3a5HwCBXKSaTp8qt4BlD7w/0?wx_fmt=gif&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p>
</li>
<li><p><strong>T杠划船</strong><br>4组*8-12次<br><img src="https://n.sinaimg.cn/sinacn/20170813/5d25-fyixiay7159642.gif" alt=""></p>
</li>
<li><p><strong>杠铃划船</strong><br>4组*8-12次<br><img src="https://n.sinaimg.cn/sinacn/20170813/9c4e-fyixiay7158691.gif" alt=""></p>
</li>
<li><p><strong>钢线划船 </strong><br>4组*8-12次<br><img src="https://n.sinaimg.cn/sinacn/20170813/bd08-fyixhyw7783184.gif" alt=""></p>
</li>
<li><p><strong>高位颈前下拉</strong><br>2组*8-12次<br><img src="http://mmbiz.qpic.cn/mmbiz_gif/5xVQhhicpMYhrtbcTJtZa8J59fUUF8YziaeAfkobCickJW9K850rpj9ZMicHanARhZib1xccN4MtKjAFlgoMFmRNsRw/0?wx_fmt=gif&amp;wxfrom=5&amp;wx_lazy=1" alt=""> </p>
</li>
<li><p><strong>高位颈后下拉</strong><br>2组*8-12次<br><img src="http://mmbiz.qpic.cn/mmbiz_gif/5xVQhhicpMYhrtbcTJtZa8J59fUUF8YziaboD08hIctibeE8qSuuWmL4N4kiarOLLpuCoF0ibiblibic6OgcqyCKxjEbUA/0?wx_fmt=gif&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总结目前自己健身的训练项目和注意细节&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="健身" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/%E5%81%A5%E8%BA%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>一本书读懂财报</title>
    <link href="http://yoursite.com/2017/08/22/%E4%B8%80%E6%9C%AC%E4%B9%A6%E8%AF%BB%E6%87%82%E8%B4%A2%E6%8A%A5/"/>
    <id>http://yoursite.com/2017/08/22/一本书读懂财报/</id>
    <published>2017-08-22T14:16:23.000Z</published>
    <updated>2017-09-05T16:32:31.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>认知理解基本的财务会计术语和技能</li>
<li>教读者学会看财务报表<a id="more"></a>
</li>
</ol>
<p>[toc]</p>
<h1 id="专业术语解释"><a href="#专业术语解释" class="headerlink" title="专业术语解释"></a>专业术语解释</h1><table>
<thead>
<tr>
<th>名词</th>
<th>专业术语</th>
<th>通俗理解</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>货币资金（Cash）</strong></td>
<td>包括库存现金、银行存款和其他货币资金三个项目的期末余额，具有专门用途的货币资金不包括在内。</td>
<td>说白了就是钱。不管是放在银行里的钱，还是放在公司的钱，都是企业的货币资金。</td>
</tr>
<tr>
<td><strong>应收账款（Accounts Receivable）</strong></td>
<td>核算企业因销售商品、提供劳务等经营活动应收取的款项。</td>
<td>在销售产品的时候，时常有卖掉产品却收不到钱的情况发生，可能是因为买方说不能马上付钱给卖方，而卖方又不想失去这个客户，所以愿意承担风险，让买方延迟付款。也有可能是因为，同类产品的售卖者很多，为了和别人竞争，卖方必须向买方承诺一些优惠条件。</td>
</tr>
<tr>
<td><strong>其他应收款（Other Receivables）</strong></td>
<td>企业除存出保证金（如租房子时交付的未来将退回的保证金、押金等）、买入返售金融资产、应收票据、应收账款、预付账款、应收股利、应收利息、应收代位追偿款、应收分保账款、应收分保合同准备金、长期应收款等以外的其他各种应收及暂付款项</td>
<td>比如说，小张的好朋友小红的公司临时周转不开，小红就向小张借了100万元，并承诺两周之后把钱还给小张。这笔钱显然不是一项投资，或者说不是一项对外的贷款，因为小张没有向小红收取任何利息；但小张又必须在两周之后收回向小红的借款，所以说这笔钱也是一笔应收款。这种类型的应收款跟一般的应收账款是不一样的，它不是销售产品所得</td>
</tr>
<tr>
<td><strong>预付账款（Prepaid Accounts）</strong></td>
<td>企业按照合同规定预付的款项。它带来了一种向卖方收款的权利——预付账款相当于是暂存在卖方处的，只要买方没有获得产品，就都具有这笔预付账款的所有权。</td>
<td>比如说货品相当紧缺，卖方可能会要求买方预付一笔定金，甚至要求买方预付所有的货款；而买方也想要切切实实地把东西握在手里，因而也愿意提前把钱付给卖方。这样就产生了预付账款。</td>
</tr>
<tr>
<td><strong>存货（Inventory）</strong></td>
<td>企业在日常活动中持有以备出售的产成品或商品、处在生产过程中的在产品、在生产过程或提供劳务过程中耗用的材料和物料等</td>
<td>生产产品所需的“原材料”、生产出来的“产成品”，以及尚且处在生产过程中的没有完工的“在产品”，都是存货。</td>
</tr>
<tr>
<td><strong>产成品（Finished Goods）</strong></td>
<td>企业已经完成全部征税过程并已验收入库合乎标准规格和技术条件，可以按照合同规定的条件送交订货单位，或者可以作为商品对外销售的产品。</td>
<td>-</td>
</tr>
<tr>
<td><strong>流动资产（Current Assets）</strong></td>
<td>指企业可以在一年或者超过一年的一个营业周期内变现或者运用的资产。</td>
<td>货币资金、应收账款、其他应收款、预付账款、存货都是企业的流动资产，各项流动资产在资产负债表中是按照它们各自转换为现金的速度来排序的。</td>
<td>货币资金本来就是钱，它不用变就已经是钱了。应收账款只要能收回来就能变成钱，所以它排在第二位。存货需要把它变成应收账款，然后才能变成现金，所以它一定排在应收账款之后。</td>
</tr>
<tr>
<td><strong>非流动资产（Non-current Assets）</strong></td>
<td>指流动资产以外的资产。包括长期投资、固定资产、无形资产</td>
</tr>
<tr>
<td><strong>长期投资（Long-term Investments）</strong></td>
<td>指不满足短期投资条件的投资，即不准备在一年或长于一年的经营周期之内转变为现金的投资。长期投资按其性质分为长期股票投资、长期债券投资和其他长期投资。</td>
<td>如参股别的公司，小张持有股权；组建一个子公司，小张持有这家子公司的股权；又或者持有债券……只要是长期持有的股权和债券，都算是小张的长期投资。</td>
</tr>
<tr>
<td><strong>固定资产（Fixed Assets）</strong></td>
<td>指同时具有下列特征的有形资产：（1）为生产商品、提供劳务、出租或经营管理而持有的；（2）使用寿命超过一个会计年度。</td>
<td>如设备、厂房、汽车、土地等不仅必须满足使用时间长这一条件，它还需要具有较高的价值。</td>
<td>使用的过程中，固定资产会逐渐损耗，其价值也会随着损耗逐渐降低。但土地不会随着时间的不断流逝而变得破旧不堪，相反，它可能还会随着时间而不断增值，因此，对于土地而言，是不会有折旧这一说</td>
</tr>
<tr>
<td><strong>固定资产的折旧（Depreciation）</strong></td>
<td>指一定时期内为弥补固定资产损耗按照规定的固定资产折旧率提取的固定资产折旧，或按国民经济核算统一规定的折旧率虚拟计算的固定资产折旧。</td>
<td></td>
</tr>
<tr>
<td><strong>无形资产（Intangible Assets and Other Assets）</strong></td>
<td>指企业拥有或者控制的没有实物形态的可辨认非货币性资产。本科目核算企业持有的无形资产成本，包括专利权、非专利技术、商标权、著作权、土地使用权等。</td>
<td>如专利权、专有技术、版权、商标权、商誉等。另外在中国，我们还拥有另一项无形资产——土地使用权。</td>
</tr>
<tr>
<td><strong>土地使用权（Land Usage Rights）</strong></td>
<td>国家机关、企事业单位、农民集体和公民个人，以及三资企业，凡具备法定条件者，依照法定程序或依约定对国有土地或农民集体土地所享有的占有、利用、收益和有限处分的权利。</td>
<td></td>
</tr>
<tr>
<td><strong>历史成本/原始成本/实际成本（Historical Cost）</strong></td>
<td>资产在其取得时为它所支付的现金或现金等价物的金额。</td>
<td>除了金融资产与房地产之外，所有的大多数资产都是按照历史成本来计价。</td>
<td>当市场波动时，历史成本却没有办法体现出资产的变化；当市场波动时，历史成本却没有办法体现出资产的变化</td>
</tr>
<tr>
<td><strong>公允价值/公允市价/公允价格（Fair Value）</strong></td>
<td>熟悉市场情况的买卖双方在公平交易的条件下和自愿的情况下所确定的价格，或无关联的双方在公平交易的条件下一项资产可以被买卖或者一项负债可以被清偿的成交价格。</td>
<td>如果一个东西的市场价格全世界都看得到，没有任何争议，它就可以用公允价值来计价。</td>
<td>与历史成本相对的，用当前的市场价格来计价的</td>
</tr>
<tr>
<td><strong>金融资产（Financial Assets）</strong></td>
<td>金融资产通常指企业的库存现金、银行存款、其他货币资金（如：企业的外埠存款、银行本票存款、银行汇票存款、信用卡存款、信用证保证金存款、存出投资款等）、应收账款、应收票据、贷款、其他应收款、股权投资、债权投资和衍生金融工具形成的资产等</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>负债（Liability）</strong></td>
<td>由于过去的交易或事项所引起的公司、企业的现有债务，这种债务需要企业在将来以转移资产或提供劳务加以清偿，从而引起未来经济利益的流出</td>
<td></td>
</tr>
<tr>
<td><strong>短期借款（Short-term Borrowing）</strong></td>
<td>企业用来维持正常的生产经营所需的资金或为抵偿某项债务而向银行或其他金融机构等外单位借入的、还款期限在一年以下或者一年的一个经营周期内的各种借款。</td>
<td></td>
</tr>
<tr>
<td>长期借款（Long-term Loans Payable）</td>
<td>企业从银行或其他金融机构借入的期限在一年以上（不含一年）的借款。</td>
<td></td>
</tr>
<tr>
<td><strong>应付账款（Accounts Payable）</strong></td>
<td>企业因购买材料、物资和接受劳务供应等而应该付给供货单位的账款。</td>
<td></td>
</tr>
<tr>
<td><strong>预收账款（Deposit Received）</strong></td>
<td>买卖双方协议商定，由购货方预先支付一部分货款给供应方而发生的一项负债。</td>
<td></td>
<td>如果买方向供应商付出一笔预付账款，供应商就因而肩负着必须给买家发货的责任。这也是一笔负债，叫作“预收账款”。</td>
</tr>
<tr>
<td><strong>其他应付款（Other Payables）</strong></td>
<td>企业在商品交易业务以外发生的应付和暂收款项。指企业除应付票据、应付账款、应付工资、应付利润等以外的应付、暂收其他单位或个人的款项。</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>流动负债</strong></td>
<td>指企业在一年之内必须支付的负债。</td>
<td>所有公司欠税务局的钱，欠款原因与欠付员工工资的原因相同。即大部分公司都是在下个月向税务局缴纳上个月的税款，那么在上个月月底会计做报表的时候，就出现了企业已经发生经营行为却未向税务局缴税的情况。因此，对于企业而言，就又多了一笔负债，即“应交税金”。</td>
</tr>
<tr>
<td><strong>应付债券（Bond Payable）</strong></td>
<td>企业为筹集资金而对外发行的期限在一年以上的长期借款性质的书面证明，约定在一定期限内还本付息的一种书面承诺。</td>
<td></td>
</tr>
<tr>
<td><strong>流动负债（Current Liabilities）</strong></td>
<td>在一份资产负债表中，一年内或者超过一年的一个营业周期内需要偿还的债务合计。流动负债主要包括短期借款、应付票据、应付账款、预收账款、应付工资、应付福利费、应付股利、应交税金、其他暂收应付款项、预提费用和一年内到期的长期借款等</td>
<td></td>
</tr>
<tr>
<td><strong>非流动负债（Non-current Liabilities）</strong></td>
<td>偿还期在一年或者超过一年的一个营业周期以上的债务。非流动负债的主要项目有长期借款、应付债券和长期应付款等。</td>
<td></td>
</tr>
<tr>
<td><strong>长期应付款（Long-term Payable）</strong></td>
<td>企业除了长期借款和应付债券以外的长期负债，包括应付引进设备款、应付融资租入固定资产的租赁费等。</td>
</tr>
</tbody>
</table>
<h1 id="企业的3种经济活动"><a href="#企业的3种经济活动" class="headerlink" title="企业的3种经济活动"></a>企业的3种经济活动</h1><p>经营、投资、融资循环往复,也是个从现金开始又回到现金的循环过程。<br>公司需要做资产负债表、利润表和现金流量表三张财务报表。</p>
<ol>
<li><p>经营活动：比如一个企业需要生产产品、销售产品、回收货款。<br> 如：采购原材料、生产产品、销售产品</p>
</li>
<li><p>投资活动：想到一个新的地区去开展业务，想进入一个新的业务领域，或者想设计生产出一个新产品，都要进行投资。<br> 如：盖厂房、买设备，等到企业发展壮大之后，我还有可能用这笔钱投资别的公司，去参股、去跟别人组建合资企业，或者建一个子公司</p>
</li>
<li><p>融资活动：在经营和投资的过程当中，只要这家公司缺钱了，它就必须到银行去借钱，或者找别人来投资自己</p>
</li>
</ol>
<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><blockquote>
<p>一家刚成立的公司在去年一整年共进行了13项经济活动</p>
</blockquote>
<ol>
<li>设立公司，股东投资3200万元现金。</li>
<li>向银行借款5100万元，借款期限为6个月。</li>
<li>购买生产设备、办公家具和车辆，建造办公楼、厂房，花费5700万元，以银行存款支付。</li>
<li>获取一块土地的使用权，花费150万元。</li>
<li>采购原材料花费2400万元，到12月31日为止支付1600万元现金，其余部分将在下一年度分期支付。</li>
<li>生产出一批产品。产品成本为3600万元，其中使用的原材料价值为2400万元；发生了人工费和其他支出1200万元，以现金支付。</li>
<li>销售产品4300万元，销售成本3100万元。到12月31日为止收到3000万元现金，其余部分将在下一年度内收到。</li>
<li>为下一年采购原材料预付150万元。</li>
<li>研发部门当期花费50万元成功地研制出用低成本进行污染处理的技术。</li>
<li>支付管理人员工资和行政开支150万元，支付销售人员工资和外地销售分公司开支250万元。</li>
<li>支付银行利息130万元。</li>
<li>支付所得税100万元。</li>
<li>分配现金股利100万元</li>
</ol>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><ol>
<li><p>第一项：一群人投入了3200万元组建了这家公司</p>
<blockquote>
<p>这群人就自然而然变成了这家公司的股东。股东往公司投钱，引起了现金的增加，这是融资活动的现金流入。股东投入了3200万元，这笔钱是股东投入的，被归入股东权益中的股本这一项，股本就因此而增加了3200万元。</p>
</blockquote>
</li>
<li><p>第二项：向银行贷款5100万元。</p>
<blockquote>
<p>公司的货币资金将会因此增加5100万元，而这家公司的短期借款也会因此增加5100万元</p>
</blockquote>
</li>
<li><p>第三项：支出5700万元货币资金来购置厂房、设备以及办公家具。  </p>
<blockquote>
<p>购置固定资产,变化的只有资产结构,资产总量却并没有发生变化。</p>
</blockquote>
</li>
<li><p>第四项：花费150万元获得了一块土地的使用权。</p>
<blockquote>
<p>150万元的货币资金变成了150万元的无形资产。资产总量依旧没有发生任何变化</p>
</blockquote>
</li>
<li><p>第五项：采购了价值2400万元的原材料，但却只支付了1600万元给它的供应商。</p>
<blockquote>
<p>这家企业多了2400万元的原材料，也就是多了2400万元的存货；支付给供应商1600万元现金，所以货币资金会减少1600万元；公司还欠供应商800万元，也就是说还有800万元的应付账款没有付出，这属于它的负债项目。</p>
</blockquote>
</li>
<li><p>第十一项：这个公司向银行偿还了130万元利息。<br>借了银行的钱，这是一项融资活动的现金流出。</p>
</li>
<li>第十二项：这个公司支付了100万元的所得税。支付所得税又是一个经营行为，所以这是一个经营活动的现金流出。</li>
<li>第十三项经济活动：这个公司给自己的股东们分配了100万元利润。它为什么要分配利润？是因为它用了股东的钱，所以就要给股东分钱，流出现金。因此，这同样是一项融资活动。</li>
</ol>
<p>只要把所有与经营相关的内容汇总在一起，就得出了企业的经营活动现金流；把所有与投资相关的内容汇总在一起，就是企业的投资活动现金流；把所有与融资相关的现金流汇总在一起，就得到了企业的融资活动现金流。</p>
<h1 id="资产负债表"><a href="#资产负债表" class="headerlink" title="资产负债表"></a>资产负债表</h1><h1 id="利润表"><a href="#利润表" class="headerlink" title="利润表"></a>利润表</h1><h1 id="现金流量表"><a href="#现金流量表" class="headerlink" title="现金流量表"></a>现金流量表</h1><h1 id="三报表间关系"><a href="#三报表间关系" class="headerlink" title="三报表间关系"></a>三报表间关系</h1>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;认知理解基本的财务会计术语和技能&lt;/li&gt;
&lt;li&gt;教读者学会看财务报表
    
    </summary>
    
      <category term="工作" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="阅读の力量" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/%E9%98%85%E8%AF%BB%E3%81%AE%E5%8A%9B%E9%87%8F/"/>
    
    
      <category term="财务会计" scheme="http://yoursite.com/tags/%E8%B4%A2%E5%8A%A1%E4%BC%9A%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>极致高效の日常和21天の主题挑战</title>
    <link href="http://yoursite.com/2017/08/22/%E6%9E%81%E8%87%B4%E9%AB%98%E6%95%88%E3%81%AE%E6%97%A5%E5%B8%B8%E5%92%8C21%E5%A4%A9%E3%81%AE%E4%B8%BB%E9%A2%98%E6%8C%91%E6%88%98/"/>
    <id>http://yoursite.com/2017/08/22/极致高效の日常和21天の主题挑战/</id>
    <published>2017-08-21T16:59:05.000Z</published>
    <updated>2017-09-19T15:06:16.000Z</updated>
    
    <content type="html"><![CDATA[<link href="/style.css" rel="stylesheet" type="text/css"><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" Plz enter password to read. "/> <label for="pass"> Plz enter password to read. </label> <div class="bottom-line"></div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      Plz enter password to read.
    
    </summary>
    
      <category term="反思の艺术" scheme="http://yoursite.com/categories/%E5%8F%8D%E6%80%9D%E3%81%AE%E8%89%BA%E6%9C%AF/"/>
    
      <category term="作息与习惯" scheme="http://yoursite.com/categories/%E5%8F%8D%E6%80%9D%E3%81%AE%E8%89%BA%E6%9C%AF/%E4%BD%9C%E6%81%AF%E4%B8%8E%E4%B9%A0%E6%83%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>关于运营的技能</title>
    <link href="http://yoursite.com/2017/08/22/%E5%85%B3%E4%BA%8E%E8%BF%90%E8%90%A5%E7%9A%84%E6%8A%80%E8%83%BD/"/>
    <id>http://yoursite.com/2017/08/22/关于运营的技能/</id>
    <published>2017-08-21T16:50:56.000Z</published>
    <updated>2017-08-21T16:55:57.000Z</updated>
    
    <content type="html"><![CDATA[
<ol>
<li>在知乎上扒了运营相关要求的能力并总结</li>
<li>对应能力要恶补的书籍
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;在知乎上扒了运营相关要求的能力并总结&lt;/li&gt;
&lt;li&gt;对应能力要恶补的书籍
    
    </summary>
    
      <category term="工作" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="做生意技能" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/%E5%81%9A%E7%94%9F%E6%84%8F%E6%8A%80%E8%83%BD/"/>
    
    
      <category term="运营" scheme="http://yoursite.com/tags/%E8%BF%90%E8%90%A5/"/>
    
  </entry>
  
  <entry>
    <title>待人处事的原则（持续更新与回顾）</title>
    <link href="http://yoursite.com/2017/08/21/%E5%BE%85%E4%BA%BA%E5%A4%84%E4%BA%8B%E7%9A%84%E5%8E%9F%E5%88%99/"/>
    <id>http://yoursite.com/2017/08/21/待人处事的原则/</id>
    <published>2017-08-21T15:32:03.000Z</published>
    <updated>2017-09-12T16:04:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ouyxzbi9n.bkt.clouddn.com/%E5%BE%85%E4%BA%BA%E5%A4%84%E4%BA%8B%E5%8E%9F%E5%88%99.png" alt=""></p>
<ol>
<li>原则是个好东西，尽早总结属于自己的原则还是是有益处的</li>
<li>熬一些鸡汤不时补一下<a id="more"></a>
</li>
</ol>
<h1 id="励志"><a href="#励志" class="headerlink" title="励志"></a>励志</h1><h2 id="自立"><a href="#自立" class="headerlink" title="自立"></a>自立</h2><ol>
<li>如果你想走到高處，就要是用自己的兩條腿！不要讓別人把你抬到高處，不要坐在別人的背上和頭上。靠著他人而登上高峰，即使成功了也不能讓人服氣。唯有靠自己走向成功，人們才會發自內心地敬佩你。</li>
<li>人生總要吃苦，把你的一生泡在蜜罐裡，你也感覺不到甜的滋味，因為有了苦味，我們才知道守候與珍惜，守候平淡與寧靜，珍惜活著的時光。總有些苦必須要吃的，今天不苦學，少了精神的滋養，註定了明天的空虛；今天不苦練少了技能的支撐，註定了明天的貧窮。為了日後的充實與富有，苦在當下其實很值得。</li>
<li>人生晚吃苦不如早吃苦。人生是很累的，你現在不累，以後就會更累。人生是很苦的，你現在不苦，以後就會更苦。</li>
<li>只要路是對的，就不怕路遠。</li>
<li>今天做別人不願做的事，明天才能做別人做不到的事。</li>
<li>現實會告訴你，不努力就會被生活給踩死。無需找什麼藉口，一無所有，就是拼的理由。</li>
<li>曹操再奸都有知心友，劉備再好都有對頭人！不要太在乎別人對你的評價，做好自己的人，幹好自己的事，走好自己的路！</li>
<li>【最大財富：年輕時犯錯誤的機會】年輕時應該作一些冒險。年輕時最大的財富不是你的青春，不是你的美貌，也不是你充沛的精力，而是你有犯錯誤的機會。如果你年輕時都不能追隨自己心裡的那種強烈願望，去為自己認為該幹的事，冒一次風險，哪怕犯一次錯誤的話。那青春多麼蒼白啊！</li>
</ol>
<h2 id="自勉"><a href="#自勉" class="headerlink" title="自勉"></a>自勉</h2><ol>
<li>你成功的速度一定要超過父母老去的速度。努力吧！ </li>
<li>現在的你，是過去的你所造的；未來的你，是現在的你所造的。</li>
<li>有才的人全敗給“傲”，平庸的人皆輸在“懶”！</li>
<li>有些事, 一轉身就是一輩子, 所以, 趁年輕, 就要敢想敢做.寧可做錯也不可錯過，做得越多機會越多。這些都將成為你將來的財富</li>
<li>永远不要跟别人比幸运，我从来没想过我比别人幸运，我也许比他们更有毅力，在最困难的时候，他们熬不住了，我可以多熬一秒钟、两秒钟。</li>
<li>成功不是將來才有的，而是從決定去做的那一刻起，持續累積而成。</li>
<li>在你停下來的時候，不要忘了忘記別人還在後面奔跑；在你放棄的時候，不要忘記別人就在你的面前，只差一步而已。</li>
<li>一個成功的人要耐得住寂寞，耐得住誘惑，還要耐得住壓力，耐得住冤枉，外練一層皮，內練一口氣，這很重要。武林高手比的是經歷了多少磨難，而不是取得過多少成功。</li>
<li>一般人，三十歲前都賺不到大錢。三十歲後要賺大錢，前題是，要看你三十歲前“投資自己”了沒有？投資自己，就是學習未知的學問，鍛練欠缺的技能，見識陌生的世界。以及，結交比你更好的人。</li>
<li>最終你相信什麼就能成為什麼。因為世界上最可怕的二個詞，一個叫執著，一個叫認真，認真的人改變自己，執著的人改變命運。</li>
<li>別逢人就低頭，別逢人就訴苦，旁人終歸是旁人，沒幾個人真把你的傷當自己的痛處。有些人以為你無堅不摧，那就隨他們喜歡；別人不知道的，你沒必要反駁給他聽。自己選的就向前走，再苦再累也別停下。這一生，陪著我們一同歡喜的該是身邊全部人，陪著哭的也就那麼幾個人，去認真努力工作，心安理得生活。</li>
<li>一個年輕人，覺得自己懷才不遇，有位老人聽了，隨即把一粒沙子扔在沙灘上，說：“請把它找回來”，“這怎麼可能！”接著老人又把一顆珍珠扔到沙灘上，“那現在呢？”——如果你只是沙灘中的一粒沙，那你不能苛求別人注意你，認可你。如果要別人認可你，那你就想辦法先讓自己變成一顆珍珠。</li>
<li>不管在任何環境之下，都不要忘記你最原來的樣子，要學會忍耐，學會收斂。是金子總會發光，黃沙掩不住珍珠的亮。等到有一天，你回過頭來看的時候，你會發現你留下的不是只有痛苦和快樂，還有很多其它的東西。</li>
<li>人生最重要的不是握了一手好牌，而是怎樣去打好一手爛牌。</li>
<li>別在該辛苦的年齡享受安逸.</li>
<li>別人的智慧可以用來充實自己，絕不能用來貶低自己；別人的成功可以激勵自己，但不可用來折磨自己；別人的錯誤恰好用來提醒自己，千萬不能用來娛樂自己。</li>
<li>吃別人所不能吃的苦，忍別人所不能忍的氣..做別人所不能做的事，就能享受別人所不能享受的一切…</li>
<li>成功没有捷徑。你必須將你的天賦、才能、技巧發揮到最大限度，才能把其他所有人甩在你後面。</li>
<li>不要抱怨你沒有一個好爸爸，不要抱怨你的工作差，不要抱怨沒人賞識你。現實有太多的不如意，就算生活給你的是垃圾，你也要有把垃圾踩在腳下登上世界之巔的能力。這個世界只在乎你是否到達了一定的高度，沒人在意你是以怎樣的方式上去的——踩在巨人的肩膀，還是踩著垃圾，只要你上得去。</li>
<li></li>
</ol>
<h2 id="自新"><a href="#自新" class="headerlink" title="自新"></a>自新</h2><ol>
<li>每個人一開始都是差不多的，後來變得不同，都是因為習慣。</li>
<li>現在的你，是過去的你所造的；未來的你，是現在的你所造的。</li>
<li>動作要快。不要怕犯錯，即便是犯錯也寧願是動作太快而非太慢。</li>
<li>不會游泳，換游泳池沒有用；不懂愛情，換男女朋友也不行；不懂經營家庭，換愛人仍難以幸福；不懂管理，換員工和客戶無事于補；不懂積累，換公司換老闆換老師改變不了命運；不懂基本養生，補品再好醫院再好也難長壽。自己是一切問題的根源，要想改變一切，首先要改變自己！</li>
<li>一個人想平庸，阻攔者很少；一個人想出眾，阻攔者很多。不少平庸者與周圍人關係融洽，不少出眾者與周圍人關係緊張。</li>
<li>有時，我們做出的最艱難的抉擇，最終成為我們做過的最漂亮的事。</li>
<li>每一天都專注於當天。放下過去並專注於當下時刻，成功的人把他們的精力放在此時此刻他們能夠改變的事情上。他們不擔憂昨天或明天。</li>
<li>年輕人在職場上不要太計較，不要老是想著多付出就是被虧待，如果只做自己分內事，那大家都一樣，在職場上不會有「能見度」。要讓自己與眾不同，最好的方式就是挑戰自我的極限，不斷肯定自己的價值，並享受「進化」後的愉悅，沒有經過挑戰的職涯，只會讓青春白白流逝，並讓自己平庸化。</li>
<li>一個鑿石的石匠，他在石塊的同一位置上已敲過了一百次，卻絲毫沒有什麼改變。但是第一百零一次的時候，石頭突然裂成了兩塊。並不是這第一百零一下使石塊裂開，而是先前敲的那一百下。—許多的努力不是一下子可以看到成果，需要耐心和堅忍。</li>
<li>一天的開始，不是天亮，不是子夜，而是從太陽下山開始的。所以天黑了，我們就該埋頭發奮了。人與人的差距，其實就在這些黑夜的努力和沉澱。天亮時，你跟別人就不在同一條起跑線了。</li>
<li>年輕時我表面謙虛，其實我內心很驕傲。為什麼驕傲呢？因為同事們去玩的時候，我去求學問；他們每天保持原狀，而自己的學問日漸提高。</li>
</ol>
<h2 id="自信"><a href="#自信" class="headerlink" title="自信"></a>自信</h2><ol>
<li>凡遇事，知道的不要全說，看到的不要全信，聽到的就地消化。久而久之，氣場自成。</li>
<li>人生是一座豪華的賭場，任何一場高籌碼的賭局，都不能有分毫的猶豫，篤定信念才能使你成為大贏家。圓規為什麼可以畫圓？因為腳在走，心不變。人為什麼不能圓夢？因為心不定，腳不動.</li>
<li>斬斷自己的退路，才能更好地贏得出路。因為身後有退路，我們就會心存僥倖和安逸，前行的腳步也會放慢；如果身後無退路，我們才能集中全部精力，義無反顧，勇往直前，為自己贏得出路。</li>
<li>一隻站在樹上的鳥兒，從來不會害怕樹枝斷裂，因為她相信的不是樹枝，而是她自己的翅膀。</li>
<li>做什麼事，說什麼話，都太在乎別人的感受，等於為別人活著。你照顧不了所有人的感受，你只會讓自己不好受。何必向不值得的人證明什麼，生活得更好，是為了自己。其實，人生最值得欣慰的事莫過於父母健全、知己兩三、盜不走的愛人，其他都是假像，別太在乎。</li>
<li>做人和做事一樣都要有自己的特色，堅持做你自己，成功就是最好的說明！</li>
<li>對於看不清楚的路，先走兩步，踩結實了，然後再跑，回頭看看，沒問題了，再撒開腳丫跑。走了兩步，發現不對，趕快折回來，腳上沾了點泥水，沒什麼了不起，換雙鞋，尋找新路再往前走。</li>
<li>衡量一個人的成功標誌，不是看他登到頂峰的高度，而是看他跌到低谷的反彈力！</li>
<li>不要活在別人的嘴裡，不要活在別人的眼裡，而是把命運握在自己手裡。</li>
<li>當你覺得處處不如人時，不要自卑，記得你只是平凡人。當你看到別人在笑時，不要以為世界上只有你一個人在傷心，其實別人只是比你會掩飾。當你很無助時，你可以哭，但哭過你必須要振作起來，即使輸掉了一切，也不要輸掉微笑。</li>
<li>一個軟弱的人，最大的弱點就是耳根子軟，很容易同意別人的看法或做法。即使自己也有想法，最後還是跟隨他人。因為跟群眾比較安全，有那麼多人都這麼做，你覺得自己不孤單，覺得自己不可能迷失。然而，就因為這種的想法，才讓你一再迷失。切記別人的意見是提供參考，而不是取代你的思考</li>
<li>很多時候，我們都需要一種斬斷自己退路的勇氣。因為身後有退路，我們就會心存僥倖和安逸，前行的腳步也會放慢；如果身後無退路，我們才能集中全部精力，義無反顧，勇往直前，為自己贏得出路。</li>
<li>不要在意別人在背後怎麼看你說你，因為這些言語改變不了事實，卻可能攪亂你的心。心如果亂了，一切就都亂了。理解你的人，不需要解釋；不理解你的人，不配你解釋。</li>
</ol>
<h1 id="修身"><a href="#修身" class="headerlink" title="修身"></a>修身</h1><h2 id="养生"><a href="#养生" class="headerlink" title="养生"></a>养生</h2><h2 id="谨慎"><a href="#谨慎" class="headerlink" title="谨慎"></a>谨慎</h2><ol>
<li>在社會這個大染缸裡，我們不說不染顏色，但求染得顏色能恰到好處，就像一幅畫，各種各樣的色彩匯成令人賞心悅目的畫，而不是各種各樣的色彩糅雜成一團。</li>
<li>話別說得太圓滿——目的是給意外留有餘地，以免下不了臺。</li>
<li>當有負面情緒的時候，不要說。管好自己的嘴，有時候做啞巴，是一種境界.</li>
</ol>
<h2 id="省思"><a href="#省思" class="headerlink" title="省思"></a>省思</h2><ol>
<li>有兩種人永遠無法超越別人: 一種人只做別人交代的工作，另一種人是從不做好別人交代的事。</li>
<li>“做人不能不要臉，但千萬不要太要臉。”多少玻璃心的天才死在了被人吐了兩句槽就跳腳的路上。真正的內心強大，就是活在自己的世界裡，而不是活在別人的眼中和嘴上。人生在世，無非是笑笑別人，然後再讓別人笑笑自己。</li>
<li>你知道的不要全說，聽到的不要全信。有時不快樂，是因為太在意別人的感覺，一句非議一件小事，都在內心耿耿於懷，讓外界控制了自己的心情。多數時候，別人說的話做的事，他或許早就忘了，我們卻還在自我折磨著。活著已然不易，一路顛簸而來，大可不必屢屢跳下別人無心設置的陷阱。</li>
<li>有才而高調，是強人；有才而低調，是能人。強人令人畏，能人使人敬；強人樹敵多，能人盟友多；強人智商高、情商低，能人智商高、情商亦高。甯做強人，不做庸人；甯做能人，不做強人。</li>
<li>代價不是不計代價，而是要明白做任何事都要付出代價。對我們這個年齡的人來說，絕不是一句廢話。否則，要到三十歲的時候才會明白自己曾經付出了多少代價，卻不明白為什麼付出，更不明白自己得到了多少，得到什麼。</li>
<li>成功者之所以能發揮自己最大價值，關鍵是因為他了解自己，也知道自己想要什麼，人生最大的悲哀不是被人騙，而是騙自己，更可悲的是有人竟然騙了自己一輩子，還不願意醒過來！</li>
<li>人自出生的那一刻起，便開始生命的倒計時；人活在當下，要惜秒如金，生命就在呼和吸之間，每一秒都是下一秒的“過去”</li>
</ol>
<h2 id="浑厚"><a href="#浑厚" class="headerlink" title="浑厚"></a>浑厚</h2><ol>
<li>最好的人生狀態：安于得失，淡於成敗，依舊向前。</li>
<li>其實人跟樹是一樣的，越是嚮往高處的陽光，它的根就越要伸向黑暗的地底。</li>
<li>隨緣不是得過且過，而是盡人事。存平常心，行方便事，則天下無事；懷慈悲心，做慈悲事，則心中太平。</li>
<li>幸福的人生，需要三種姿態：對過去，要淡；對現在，要惜；對未來，要信。</li>
</ol>
<h1 id="怀德"><a href="#怀德" class="headerlink" title="怀德"></a>怀德</h1><h2 id="大度"><a href="#大度" class="headerlink" title="大度"></a>大度</h2><ol>
<li>一個人的成熟與否，不是出口成章，說出許多深刻的道理，或者是思想境界達到很高。而是待人接物讓人舒適，並且不卑不亢，保留自我的棱角又有接納他人的圓潤而活著。成熟的人不需要辯解，僅僅一個微笑就足夠了。</li>
<li>一個成大事的人，不能處處計較別人，消耗自已的時間去和人家爭論，不但有損自己的性情，且會失去自己的自製力。在盡可能的情況下，不妨對人謙讓一點。與其跟狗一路走，不如讓狗先走一步，如果給狗咬一口，你即使把狗打死，也不能治好你的傷口。</li>
<li>做的越對，背後說的人越多。過的越好，背後譏諷的人越多。變得越強，背後打擊的人越多。生得越美，背後嘲笑的人越多。但又有什麼關係呢？只要每天能幸福下去，足矣。發生在背後的事情，就算都清楚的”知道”，也要清楚的“聽不到”！</li>
<li>傻與不傻，要看你會不會裝傻！做人太清醒容易受傷，過於精明計較使人煩擾，難得糊塗可以減少煩惱，人生就不過是你笑笑別人，同時又被人笑笑，就過了幾十年！</li>
<li></li>
</ol>
<h2 id="隐忍"><a href="#隐忍" class="headerlink" title="隐忍"></a>隐忍</h2><ol>
<li>當有負面情緒的時候，不要說。管好自己的嘴，有時候做啞巴，是一種境界.</li>
<li>欲帶皇冠，必承其重</li>
<li>懂得低頭，才能出頭！要學到新東西，要不斷進步，就必須放低自己的姿勢。只有懂得謙虛的意義，才會得到別人的教誨，才會處處受人喜愛。低頭是一種能力，它不是自卑，也不是怯弱，它是清醒中的嬗變。有時，稍微低一下頭，或許我們的人生路會更加精彩，我們的能力也會有所長進。一個人活在世上，就必須時刻記住低頭。大師們提供到的“記住低頭”和“懂得低頭”之說，就是要我們記住：不論你的資力、能力如何，在茫茫人海裡，你只是一個小分子，無疑是渺小的。當我們把奮鬥目標看得很高的時候，更要在人生舞台上唱低調。在生活中保持低姿態，把自己看輕些，把別人看重些。其實，我們的生活又何嘗不是如此。自認為懷才不遇的人，往往看不到別人的優秀；憤世嫉俗的人，往往看不與世界的美好…</li>
<li></li>
</ol>
<h2 id="善友"><a href="#善友" class="headerlink" title="善友"></a>善友</h2><ol>
<li>處理好與人的關係，就三句話：看人長處、幫人難處、記人好處 。</li>
<li>人生在世，总会碰到一些有恩于自己的人，特别是一些在自己成长进步中、危难关键时帮助过自己的人，不可、不该更不能忘却。知恩得感恩，感恩不是停留在嘴巴上，而是要体现在行动上，关键看在他人特别是有恩于自己的人需要帮助时，能否助人一臂、帮人一把。</li>
<li>背後誇獎你的人，知道了，要珍藏在心裡，這裡面很少有水分。當面誇獎你那叫奉承，說的再難聽些叫獻媚。你可以一笑而過。也許不久就有求於你。對於那些當眾誇獎你的人，就疏忽不得，也許你轉過身去，他就會用指頭戳你。掌握一條原則：逢人多貶自己，也少誇別人，選先評優的時候除外。</li>
<li>人生的許多敗筆，多是輸在距離上。暗戀某人，或者某人有利用價值，總想與之走得近些，太近則摩擦多，久之易生不滿、誤解、矛盾、隔閡，最疏遠。與人相處的距離，其實是相互間的一種尊重。有了距離，才有雙方的空間與自由，心靈與情感才不會窒息。我們都有自己的生活，盡量多給彼此一些轉身的餘地。</li>
<li>小恩小惠攢多了就是一個大窟窿，只要接受就一定要找機會回報，行下春風望夏雨，付出就是為了收穫，其實就是一個簡單的種子與果實的關係。千萬別讓天真給害了，記住：人生如戲，都在尋找利益的平衡，只有平衡的遊戲才有可能玩下去。</li>
<li>「要交四位朋友」：1，欣賞你的朋友: 在你窮困潦倒的時候鼓勵你、幫助你。2，有正能量的朋友：在你傷心難過的時候陪伴你，開解你。3，為你領路的朋友: 愿意無私引領你，走過泥濘，迷霧。4，會批評你的朋友：時刻提醒你，監督你，不希望你的人生路走的磕磕絆絆</li>
<li>「遠離這四種連狗都不如的人」：1（畜牲型）:開口向朋友借錢的時候，恨不得跪下來，拍胸拍脯，表示感謝并承諾按時還錢，到還錢的時候，避而不見，以種種理由推脫，甚至關機躲避，賴賬不還。2（無德型）:你幫他時高興，你不幫他時就反臉，涉及到一點點利益就立馬黑臉的人。3（損人害蟲型）:不懂得尊重別人、以自我為中心的人。這幾年投機倒把，弄到幾個錢，認識了幾個政府幹部，覺得所有人都不如自己，習慣將快樂建立在別人的痛苦之上的人，為了自己利益損害大家利益，在弱者面前炫耀自己的成就。4（白眼毒蛇型）:10件事你對他做好了9件，有一件不如他的意，就翻臉，和人相處，從不記得對他的好，只記得不如意他的地方，對朋友給他幫過忙，為他開銷過的，從無感恩之心，認為白撿的應該的。</li>
<li>不要因為一時的情緒，就急著對生命下判斷。有些人，今天和明天的人生觀會差很多。如果因為一時情緒掉進穀底就傷人或毀己，明天的自己必然後悔莫及。</li>
</ol>
<h2 id="格局"><a href="#格局" class="headerlink" title="格局"></a>格局</h2><ol>
<li>火車剛出現時，許多人斷言它不如馬車管用；飛機剛出現時，許多人堅信它不過是一個毫無用處的大號風箏；這些故事告訴我們，如果你心裡有一個美麗的夢就別太在乎外界的看法.</li>
<li>『失敗不等於失敗者』，失敗只是一時的，隨時可以重頭來過，但只要選擇放棄，那就注定會是個失敗者！成功的秘訣是不怕失敗和不忘失敗，成功者都是從失敗的煉獄中走出來的，成功與失敗循環往復，構成精彩的人生。成功與失敗的裁決，不是在起點，而是在終點。</li>
<li>一瓶飲料便利商店賣10元，飯店賣30元。一個人的價值取決於所在的位置。</li>
<li>從一個人煩惱的事情，就可知曉其心胸及未來成就的大小，換言之，小事不必花時間煩惱，大事光煩惱也無益，只要想辦法在最短時間把事情解決，一切就雨過天晴。</li>
<li>好的時候不要看得太好，壞的時候不要看得太壞。最重要的是要有遠見，殺雞取卵的方式是短視的行為。</li>
<li>近視不必驚慌，該慌的是短視；遠視不必煩惱，該煩惱的是沒有遠見。</li>
</ol>
<h1 id="向学"><a href="#向学" class="headerlink" title="向学"></a>向学</h1><h2 id="为学"><a href="#为学" class="headerlink" title="为学"></a>为学</h2><ol>
<li>學習與不學習的人，在每天看來沒有任何區別；在幾個月看來差異也是微乎其微的；在每年看來的差距雖然明顯，但好像也沒什麼了不起的；但在每5年來看的時候，那就是財富的巨大分野。等到了10年再看的時候，也許就是一種人生對另一種人生不可企及的鴻溝。</li>
<li>成功一定有方法，失敗一定有原因，失敗的原因只有一個，那就是四個字：學習不夠！</li>
<li>一個真正善於學習的人是可怕的，而且絕不會沒有未來。</li>
<li>因為整個社會一直在進步，所以個人要「學習」的事物只會不斷增加絕不會減少，每一個人都要有「天天學習」、「無疆界學習」的能力，才能日積月累自己的「競爭力」，讓人無法取代。</li>
<li></li>
</ol>
<h2 id="深思"><a href="#深思" class="headerlink" title="深思"></a>深思</h2><h2 id="明理"><a href="#明理" class="headerlink" title="明理"></a>明理</h2><ol>
<li>世界上最浪費時間的事就是給年輕人講經驗，講一萬句不如你自己摔一跤，眼淚教你做人，後悔幫你成長，疼痛才是最好的老師。人生該走的彎路，其實一米都少不了。</li>
<li></li>
</ol>
<h1 id="立业"><a href="#立业" class="headerlink" title="立业"></a>立业</h1><h2 id="齐家"><a href="#齐家" class="headerlink" title="齐家"></a>齐家</h2><ol>
<li>永遠切記工作只是為了更好的生活，而非工作為了生活。</li>
<li>沒有摔過跤的孩子，是學不會走路的，父母過分的溺愛和擔憂，會剝奪子女成長的機會。失敗的教訓與成功的經驗具有同等的價值。逆反現象表現在子女身上，問題的根源卻在父母。父母是原件，子女是影本，父母好好學習，子女才能天天向上。</li>
<li>再怎麼窮，一個月也要擠出錢來孝敬父母！想想看，你的父母會不會因為負債、缺錢就不撫養你？他們再怎麼窮，還是把你撫養長大，不是嗎？所以現在你回報他們也是應該的，怎麼可以有錢才給父母，沒錢就不奉養呢？ 其實，你或許不知道，父母就是我們的天時，我們與父母的互動可以累積天時的能量，一個人如果沒有天時，這一輩子做任何事都無法順利。 </li>
</ol>
<h2 id="处事"><a href="#处事" class="headerlink" title="处事"></a>处事</h2><ol>
<li>欲速則不達，太過於急切 ，只會物極必反。凡事都有沉澱積累的過程，要穩穩的一步一個腳印，貴在堅持！簡單事情重複做，重複事情堅持做，就是這個理！</li>
<li>人一定要想清三個問題，第一你有什麼，第二你要什麼，第三你能放棄什麼。對於多數人而言：有什麼，很容易評價自己的現狀；要什麼，內心也有明確的想法。最難的是，不知道或不敢放棄什麼，這點恰能決定你想要的東西能否真正實現，沒有人可以不放棄就得到一切…</li>
<li>如果你不追求你想要的，你永遠都不會得到；如果你不問，答案永遠都是否定的；如果你不往前走，你永遠都是留在原地 </li>
<li>能幹的人，不在情緒上計較，只在做事上認真；無能的人，不在做事上認真，只在情緒上計較。</li>
<li>面對變數，有時候態度、決心比能力還重要，永不放棄是唯一的解決之道。</li>
<li>最短的距離是從手到嘴，最長的距離是從說到做。</li>
<li>同樣的聰明才智，同樣的做一件事情，為什麼有人能成功，有人會失敗，其實完全取決於對「細節」的重視程度！</li>
<li>在一個聰明人滿街亂竄年代，稀缺的恰恰不是聰明，而是一心一意，孤注一擲，一條心，一根筋。</li>
<li>每做一事，最好只追求一個最在乎的目標，其餘都可讓步，這樣達成目標的機會才高。比方：做這事，最在乎是學經驗，那就別計較錢；做那事，最要緊是錢，那就別計較面子。以此類推。若做一事，又想學經驗，又要賺得多，又要有面子，如此美事，有得等了。</li>
<li>20歲那一年買得起10歲那一年買不起的玩具，那有什麼意義呢?人生就是這樣，錯過了，就再也回不來了。有些事現在不做，以後就再也不會做了。</li>
<li>【表達的勇氣】如果你希望別人幫你，就要明確的說出來，你需要他的幫助。也許對方會拒絕，會讓你難堪，但這不是重點。重要的是，你要勇敢的說出來你的需要。因為如果你不說，事情永遠不會有進展。而且，對方也許很樂意幫你。</li>
<li>【反抗的精神】有些利益，必須爭取才能獲得，比如受到不公對待，受到欺負的時候。這時候你要反抗，你要表達出來你的不滿，你要爭取屬於你的利益。反抗反抗，爭取爭取，你會至少得到三個收穫：一是實實在在的權益；二是怒火釋放以後內心的寧靜；三是用行動證明了你不是個窩囊的人，你的自信得到了成長。</li>
<li>如果一個人以無疑的開始，必然以懷疑的結束；假如他願意以懷疑的開始，將會以無疑的結束。</li>
<li>有多少力量做多少事，不要心存等待，等待不會成功。</li>
<li>辦事有條理、有秩序,是成功者的一種表現!一個人如果辦事慌慌張張,像無頭蒼蠅一樣,是無法提高工作效率的,自然也無法得到他人的青睞,很難走進成者行列。</li>
<li>在動盪的時代，一定要主動求變，主動應招，有問題盡快解決。在執行的時候，遇到問題的時候，要抱著堅定的信心，正面的看待問題。主動變化往往會好過一成不變，束手無策。</li>
<li>【可以，但不能】可以忍受貧窮，但不能背叛人格；可以追求財富，但不能揮霍無度；可以發表歧見，但不能撥弄是非；可以不做君子，但不能去做小人；可以沒有學位，但不能沒有品位；可以不說感謝，但不能不懂感恩</li>
</ol>
<h2 id="用人"><a href="#用人" class="headerlink" title="用人"></a>用人</h2><ol>
<li>敵人一旦變成朋友，比朋友更可靠；朋友一旦變成敵人，比敵人更危險。</li>
<li>【對人1塊1，對物9毛9】如果一件東西值一塊錢，砍到九毛九，東西不會變，得到的還是那東西，要砍；如果一個人的服務值一塊錢，砍到九毛九，雖成交了，得到的服務卻可能變了，降低了，不能砍，要主動給他一快一，就能得到超值回報。</li>
<li>為人居心不可不慎!呢個世界，壞人唔少，但好人亦有，防人之心不可無，助人之心亦不可缺。</li>
<li>真正的尊重就是，我們可以互相不喜歡，我們可以互相討厭對方，但彼此還是要互相尊重</li>
<li>想了解一個人的個性，就賦予他權力。</li>
<li>性格沒有好壞之分，樂觀和悲觀對世界都有貢獻，前者發明了飛機，後者發 明了降落傘。</li>
</ol>
<h2 id="务本"><a href="#务本" class="headerlink" title="务本"></a>务本</h2><ol>
<li>做生意一定要同打球一樣，若第一桿打得不好的話，在打第二桿時，心更要保持鎮定及有計劃，這並不是表示這個會輸。就好比是做生意一樣，有高有低，身處逆境時，你先要鎮定考慮如何應付。</li>
<li>你真正喜歡想要的，沒有一樣是可以輕易得到的。這就是踏踏實實努力的理由。</li>
<li>今天我們做了別人不願做之事，明天我們就可以做別人不能做之事。</li>
<li>要永遠相信：當所有人都衝進去的時候趕緊出來，所有人都不玩了再衝進去。</li>
<li>【不知道就說不知道】「寧願問一百次路，也好過迷一次路。」勇於承認自己有所不知，也是一種長處。避免因為裝懂造成不可挽回的大錯誤！</li>
<li>懂得「忙」的人，生活常是快樂、幸福、歡喜的，如果「不忙」，整天無所事事，閒極無聊，胡思亂想，就會煩惱、痛苦。</li>
<li><strong>好謀而成、分段治事、不疾而速、無為而治</strong>，若能看透這四句話的精髓，生命可以如此的好。好謀而成是凡事深思熟慮，謀定而後動。分段治事是洞悉事物的條理，按部就班進行。不疾而速就是你沒做這事情之前，你老早就想到假如碰到這問題時你怎麼辦。由於已有充足的準備，故能胸有成竹，當機會來臨時自能迅速把握，一擊即中。無為而治則要有好的製度，好的管理系統來管理。具備這四種因素，成功的藍圖自然展現。</li>
<li>注意力在哪裡，結果就在哪裡；你關注什麼你得到什麼。遠見使你看到別人看不見的事物，做到別人做不到的事情。只有確定主要的人生角色，才能清楚地掌握全域。（確定了你的人生角色，便確定了你的目標，你該做什麼事該負什麼責任，只有知道了這些，你才能掌控你的人生發展全域。</li>
<li>大鬧天宮時，孫悟空碰到的都是給玉帝打工的，他們出力但不玩命；西天取經時，悟空碰到的都是自己出來創業的…“</li>
<li>【創業之牛蛙效應】把一隻牛蛙放在開水鍋裡，牛蛙會很快跳出來；但當你把它放在冷水里，它不會跳出來，然後慢慢加熱，起初牛蛙出於懶惰，不會有什麼動作，當水溫高到它無法忍受的時候，想出來，但已經沒有了力氣。悟：注意關注你的財務。不要等到沒錢了再想怎麼掙，你會發現那時候掙錢更難！</li>
<li>任何時候做任何事，訂最好的計畫，盡最大的努力，作最壞的準備。等待的方法有兩種：一種是什麼事也不做空等，一種是一邊等一邊把事業向前推動</li>
</ol>
<h2 id="机遇"><a href="#机遇" class="headerlink" title="机遇"></a>机遇</h2><ol>
<li>機遇總是有的，如果把握不住，不要怨天尤人，只因自己不夠優秀.</li>
<li>危機就是機會。一名生意人必需保持對時勢的敏感與警覺。機會可以走過路過經過，可是不要錯過！</li>
<li>這個社會，是快魚吃慢魚，而不是慢魚吃快魚。任何一個行業，一個市場，都是先來的有肉吃，後來的湯都沒得喝。</li>
<li>在對的時間做對的事，它們可能只是小事，但通常它們造成贏與輸的差別。</li>
<li>人不能創造時機，但是它可以抓住那些已經出現的時機。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ouyxzbi9n.bkt.clouddn.com/%E5%BE%85%E4%BA%BA%E5%A4%84%E4%BA%8B%E5%8E%9F%E5%88%99.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;原则是个好东西，尽早总结属于自己的原则还是是有益处的&lt;/li&gt;
&lt;li&gt;熬一些鸡汤不时补一下
    
    </summary>
    
      <category term="反思の艺术" scheme="http://yoursite.com/categories/%E5%8F%8D%E6%80%9D%E3%81%AE%E8%89%BA%E6%9C%AF/"/>
    
      <category term="待人处事原则" scheme="http://yoursite.com/categories/%E5%8F%8D%E6%80%9D%E3%81%AE%E8%89%BA%E6%9C%AF/%E5%BE%85%E4%BA%BA%E5%A4%84%E4%BA%8B%E5%8E%9F%E5%88%99/"/>
    
    
      <category term="查阅翻看的" scheme="http://yoursite.com/tags/%E6%9F%A5%E9%98%85%E7%BF%BB%E7%9C%8B%E7%9A%84/"/>
    
  </entry>
  
  <entry>
    <title>关于打工和做生意选择的思考</title>
    <link href="http://yoursite.com/2017/08/21/%E5%85%B3%E4%BA%8E%E6%89%93%E5%B7%A5%E5%92%8C%E5%81%9A%E7%94%9F%E6%84%8F%E9%80%89%E6%8B%A9%E7%9A%84%E6%80%9D%E8%80%83/"/>
    <id>http://yoursite.com/2017/08/21/关于打工和做生意选择的思考/</id>
    <published>2017-08-21T15:23:55.000Z</published>
    <updated>2017-08-30T16:43:30.000Z</updated>
    
    <content type="html"><![CDATA[<link href="/style.css" rel="stylesheet" type="text/css"><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" Plz enter password to read. "/> <label for="pass"> Plz enter password to read. </label> <div class="bottom-line"></div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      Plz enter password to read.
    
    </summary>
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="生活日记" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/%E7%94%9F%E6%B4%BB%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="人生选择" scheme="http://yoursite.com/tags/%E4%BA%BA%E7%94%9F%E9%80%89%E6%8B%A9/"/>
    
  </entry>
  
  <entry>
    <title>Git学习总结</title>
    <link href="http://yoursite.com/2017/08/20/Git%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2017/08/20/Git学习总结/</id>
    <published>2017-08-20T03:28:55.000Z</published>
    <updated>2017-08-21T16:43:42.000Z</updated>
    
    <content type="html"><![CDATA[
<ol>
<li>对远程仓库和本地仓库的创建，管理等操作</li>
<li>Git常用操作命令的总结
</li>
</ol>
<h1 id="Git关联本地和远程仓库"><a href="#Git关联本地和远程仓库" class="headerlink" title="Git关联本地和远程仓库"></a>Git关联本地和远程仓库</h1><h2 id="注册账户以及创建仓库"><a href="#注册账户以及创建仓库" class="headerlink" title="注册账户以及创建仓库"></a>注册账户以及创建仓库</h2><ol>
<li>打开<a href="https://github.com" target="_blank" rel="external">https://github.com</a> 直接在首页上注册<br>点按钮注册成功之后，在页面上方用户菜单上选择 “+”-&gt;New repository 创建一个新的仓库<br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/1.png" alt="1">  </li>
<li>为仓库取一个名字，点击创建仓库按钮 你将成功创建一个仓库<br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/2.png" alt="2">  </li>
</ol>
<h2 id="安装git客户端"><a href="#安装git客户端" class="headerlink" title="安装git客户端"></a>安装git客户端</h2><p>github是服务端，要想在自己电脑上使用git我们还需要一个git客户端。<br>windows用户请下载 <a href="http://msysgit.github.com/" target="_blank" rel="external">http://msysgit.github.com/</a><br>mac用户请下载 <a href="http://code.google.com/p/tortoisegit/" target="_blank" rel="external">http://code.google.com/p/tortoisegit/</a>    </p>
<h2 id="关联本地仓库和Githup"><a href="#关联本地仓库和Githup" class="headerlink" title="关联本地仓库和Githup"></a>关联本地仓库和Githup</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><ol>
<li>在电脑硬盘里找一块地方存放本地仓库，比如创建一个/d/test文件夹</li>
<li>使用Git Bash进入改文件夹，第一次在本地仓库操作先执行<code>git init</code>命令,会多出来一个.git文件夹<br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/3.png" alt="3">  </li>
<li>把本地的仓库传到github,先在本地创建ssh key<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C <span class="string">"your_email@youremail.com"</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>后面的your_email@youremail.com改为你的邮箱,也是在github上注册的那个邮箱<br>直接点回车，说明会在默认文件id_rsa上生成ssh key。若之前你的电脑已经链接过这个账户选择不覆盖<br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/4.png" alt="4"><br>然后系统要求输入密码，直接按回车表示不设密码，建议输入密码防止以后的误操作<br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/5.png" alt="5"><br>重复密码时也是直接回车，之后提示你shh key已经生成成功。<br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/6.png" alt="6">  </p>
<ol>
<li>进入提示的地址下查看ssh key文件。 我的电脑的地址是<code>C:\Users\V-huanghq02\.ssh</code><br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/7.png" alt="7">  </li>
<li>打开<code>id_rsa.pub</code>，复制里面的key。里面的key是一对看不懂的字符数字组合，不用管它，直接复制。<br>回到github网站，进入Account Settings，左边选择SSH Keys，Add SSH Key<br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/8.png" alt="8">  </li>
<li>title随便填，粘贴<code>id_rsa.pub</code>里的内容。  </li>
<li>验证是否成功，回到<strong>仓库的上一级目录</strong>（主要是你布置创建一个本地仓库，这次把d盘作为Github的总仓库，下面的每个文件夹作为小仓库，下面的验证是为了所有的小仓库都能提交至总仓库中）下输入  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div><div class="line">```  </div><div class="line">![9](http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/9.png)   </div><div class="line">这就表示已成功连上github。</div><div class="line"></div><div class="line"><span class="comment">## 把本地仓库传到github</span></div><div class="line">1. 进入小仓库目录，需要设置username和email，因为github每次commit都会记录他们  </div><div class="line">```bash</div><div class="line">$ git config --global user.name <span class="string">"your name"</span>  </div><div class="line">$ git config --global user.email <span class="string">"your_email@youremail.com"</span></div><div class="line">```  </div><div class="line">![10](http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/10.png)  </div><div class="line">2. 在小仓库，在git bash中添加远程地址  </div><div class="line">```bash</div><div class="line">$ git remote add origin git@github.com:yourName/yourRepo.git</div></pre></td></tr></table></figure>
</li>
</ol>
<p>后面的yourName和yourRepo表示github的用户名和刚才建的小仓库名称。<br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/11.png" alt="11">    </p>
<ol>
<li>加完之后进入.git，打开config，这里会多出一个remote “origin”内容，这就是刚才添加的远程地址，也可以直接修改config来配置远程地址。<br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/12.png" alt="12"> </li>
</ol>
<h2 id="提交上传测试"><a href="#提交上传测试" class="headerlink" title="提交上传测试"></a>提交上传测试</h2><ol>
<li>进入本地文件夹新建一个新的文件或文件夹<br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/13.png" alt="13">  </li>
<li>将文件存放至Git的缓存区  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git add yourfile</div><div class="line">$ git commit -m <span class="string">"first commit"</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>yourfile表示刚创建的文件，first commit指提交的备注说明<br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/14.png" alt="14"><br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/15.png" alt="15"></p>
<ol>
<li>将Git的缓存区上传至github  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push origin master</div></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="Git的原理和常用命令"><a href="#Git的原理和常用命令" class="headerlink" title="Git的原理和常用命令"></a>Git的原理和常用命令</h1><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><blockquote>
<p>Git像是把数据看作是对小型文件系统的一组快照。<br>每次提交更新或在Git中保存项目状态时，它主要对当时的全部文件制作一个快照并保存这个快照的索引。（如果文件没有修改，Git 不再重新存储该文件，而是只保留一个链接指向之前存储的文件。图中的虚线表示）。<br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/16.png" alt="16"></p>
<h3 id="Git项目的3种状态"><a href="#Git项目的3种状态" class="headerlink" title="Git项目的3种状态"></a>Git项目的3种状态</h3><p>3种状态分别是已提交（committed）；已修改（modified）；已暂存（staged）。   </p>
<ol>
<li>已提交：表示数据已经安全的保存在本地数据库中。     </li>
<li>已修改：表示修改了文件，但还没保存到数据库中。     </li>
<li>已暂存：表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中。<br>如果 Git 目录中保存着的特定版本文件，就属于已提交状态。 如果作了修改并已放入暂存区域，就属于已暂存状态。 如果自上次取出后，作了修改但还没有放到暂存区域，就是已修改状态。 </li>
</ol>
</blockquote>
<h3 id="Git项目的3个工作区域"><a href="#Git项目的3个工作区域" class="headerlink" title="Git项目的3个工作区域"></a>Git项目的3个工作区域</h3><p>3个工作区域分别是Git仓库、工作目录以及暂存区域</p>
<ol>
<li>Git仓库目录：用来保存项目的元数据和对象数据库的地方(这是Git 中最重要的部分,从其它计算机克隆仓库时，拷贝的就是这里的数据）。</li>
<li>工作目录：对项目的某个版本独立提取出来的内容。 从Git仓库的压缩数据库中提取出来的文件，放在磁盘上供使用或修改。</li>
<li>暂存区域：是一个文件，保存了下次将提交的文件列表信息，一般在 Git 仓库目录中。<br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/17.png" alt="17">  </li>
</ol>
<h3 id="Git项目的工作流程"><a href="#Git项目的工作流程" class="headerlink" title="Git项目的工作流程"></a>Git项目的工作流程</h3><p>在工作目录中修改文件 ==&gt; 暂存文件，将文件的快照放入暂存区域 ==&gt; 提交更新，找到暂存区域的文件，将快照永久性存储到 Git 仓库目录</p>
<h3 id="Git文件的状态变化"><a href="#Git文件的状态变化" class="headerlink" title="Git文件的状态变化"></a>Git文件的状态变化</h3><p>工作目录下2种状态：已跟踪或未跟踪<br>已跟踪文件：指那些被纳入了版本控制的文件，在上一次快照中有它们的记录，在工作一段时间后，它们的状态可能处于未修改，已修改或已放入暂存区。<br>未跟踪文件：工作目录中除已跟踪文件以外的所有其它文件都属于未跟踪文件。它们既不存在于上次快照的记录中，也没有放入暂存区。 初次克隆某个仓库的时候，工作目录中的所有文件都属于已跟踪文件，并处于未修改状态。<br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/19.png" alt="19"> </p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ol>
<li><p>将现有目录中初始化成本地仓库  </p>
<pre><code class="bash">$ git init
</code></pre>
<p>创建一个名为 .git 的子目录,单着仅是做了一个初始化的操作，项目里的文件还没有被跟踪。</p>
</li>
<li><p>克隆现有的仓库<br>进入要复制的仓库的路径执行：      </p>
<pre><code class="bash">git <span class="built_in">clone</span> [url] <span class="comment"># 本地仓库得到的是远程仓库的名称</span>
或
git <span class="built_in">clone</span> [url] 新名称 <span class="comment"># 本地仓库得到的是重命名后的的名称</span>
</code></pre>
<p>在当前的初始化一个 .git 文件夹，从远程仓库拉取下所有数据放入 .git 文件夹，然后从中读取最新版本的文件的拷贝。<br>例子：进入到这个要存放仓库的目录，克隆远程的Blog库到本地，进入到Blog文件夹，所有的项目文件已经在里面了<br>注意：Git 克隆是默认配置远程 Git 仓库中的每一个文件的每一个版本都将被拉取下来。<br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/18.png" alt="18"></p>
</li>
<li><p>检查当前文件状态<br>进入具体的仓库  </p>
<pre><code class="bash">git status
</code></pre>
<p><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/20.png" alt="20"><br>所有已跟踪文件在上次提交后都未被更改过。<br>此外,当前目录下没有出现任何处于未跟踪状态的新文件，否则 Git 会在这里列出来。<br>最后，还显示了当前所在分支，并告诉这个分支同远程服务器上对应的分支没有偏离。分支名是 “master”是默认的分支名。<br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/21.png" alt="21"><br>新建的 text.txt文件出现在 Untracked files 下面。 未跟踪的文件意味着 Git 在之前的快照（提交）中没有这些文件；Git 不会自动将之纳入跟踪范围。  </p>
</li>
<li><p>跟踪新文件  </p>
<pre><code class="bash">$ git add 文件
</code></pre>
<p><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/22.png" alt="22"><br>只要在 Changes to be committed 这行下面的，就说明是已暂存状态。 如果此时提交，那么该文件此时此刻的版本将被留存在历史记录中。<br>注意：git add 命令。如果参数是目录的路径，该命令将递归地跟踪该目录下的所有文件。</p>
</li>
<li><p>暂存已修改文件<br>修改一个已被跟踪test.txt的文件，新建test.md文件，然后运行 git status 命令。出现在 Changes not staged for commit 这行下面，说明已跟踪文件的内容发生了变化，但还没有放到暂存区。<br><img src="http://oupj0rqoa.bkt.clouddn.com/image/jpg/Git/23.png" alt="23"><br>要暂存这次更新，需要运行 git add 命令。 这是个多功能命令：可以用它开始跟踪新文件，或者把已跟踪的文件放到暂存区，还能用于合并时把有冲突的文件标记为已解决状态等。 此时将这个命令理解为“添加内容到下一次提交中”。<br>运行 git add 将”test.txt”放到暂存区再使用git status查看状态  </p>
</li>
<li><p>执行 git commit 提交      </p>
<pre><code class="bash">$ git commit -m <span class="string">'文件说明'</span>
</code></pre>
</li>
</ol>
<h1 id="原文参考链接"><a href="#原文参考链接" class="headerlink" title="原文参考链接"></a>原文参考链接</h1><p><a href="https://git-scm.com/book/zh" target="_blank" rel="external">https://git-scm.com/book/zh</a><br><a href="http://1ke.co/course/194" target="_blank" rel="external">http://1ke.co/course/194</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;对远程仓库和本地仓库的创建，管理等操作&lt;/li&gt;
&lt;li&gt;Git常用操作命令的总结
    
    </summary>
    
      <category term="工作" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="互联网技能" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/%E4%BA%92%E8%81%94%E7%BD%91%E6%8A%80%E8%83%BD/"/>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>年月计划目标（持续更新与回顾）</title>
    <link href="http://yoursite.com/2017/08/10/%E5%B9%B4%E6%9C%88%E8%AE%A1%E5%88%92%E7%9B%AE%E6%A0%87/"/>
    <id>http://yoursite.com/2017/08/10/年月计划目标/</id>
    <published>2017-08-10T15:28:49.000Z</published>
    <updated>2017-09-16T16:25:24.000Z</updated>
    
    <content type="html"><![CDATA[<link href="/style.css" rel="stylesheet" type="text/css"><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" Plz enter password to read. "/> <label for="pass"> Plz enter password to read. </label> <div class="bottom-line"></div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      Plz enter password to read.
    
    </summary>
    
      <category term="反思の艺术" scheme="http://yoursite.com/categories/%E5%8F%8D%E6%80%9D%E3%81%AE%E8%89%BA%E6%9C%AF/"/>
    
      <category term="计划目标" scheme="http://yoursite.com/categories/%E5%8F%8D%E6%80%9D%E3%81%AE%E8%89%BA%E6%9C%AF/%E8%AE%A1%E5%88%92%E7%9B%AE%E6%A0%87/"/>
    
    
      <category term="查阅翻看的" scheme="http://yoursite.com/tags/%E6%9F%A5%E9%98%85%E7%BF%BB%E7%9C%8B%E7%9A%84/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客的重新迁移搭建</title>
    <link href="http://yoursite.com/2016/08/19/hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%87%8D%E6%96%B0%E8%BF%81%E7%A7%BB%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2016/08/19/hexo博客的重新迁移搭建/</id>
    <published>2016-08-19T13:39:49.000Z</published>
    <updated>2017-08-21T16:44:21.000Z</updated>
    
    <content type="html"><![CDATA[
<p>博客的之前的主题已经用了很长的一段时间了，换了个皮肤，用来记录生活吧…<br></p>
<p>测试</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;博客的之前的主题已经用了很长的一段时间了，换了个皮肤，用来记录生活吧…&lt;br&gt;
    
    </summary>
    
      <category term="工作" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="互联网技能" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/%E4%BA%92%E8%81%94%E7%BD%91%E6%8A%80%E8%83%BD/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo插件的使用总结</title>
    <link href="http://yoursite.com/2016/08/19/hexo%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2016/08/19/hexo插件的使用总结/</id>
    <published>2016-08-19T13:39:49.000Z</published>
    <updated>2017-08-21T16:42:36.000Z</updated>
    
    <content type="html"><![CDATA[<link href="/style.css" rel="stylesheet" type="text/css"><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" Welcome to my blog, enter password to read. "/> <label for="pass"> Welcome to my blog, enter password to read. </label> <div class="bottom-line"></div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div>]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="工作" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="互联网技能" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/%E4%BA%92%E8%81%94%E7%BD%91%E6%8A%80%E8%83%BD/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
